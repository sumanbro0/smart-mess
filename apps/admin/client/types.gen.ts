// This file is auto-generated by @hey-api/openapi-ts

/**
 * BearerResponse
 */
export type BearerResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * Body_add_menu_item_image_menu_item__item_id__image_post
 */
export type BodyAddMenuItemImageMenuItemItemIdImagePost = {
    /**
     * Image
     */
    image: Blob | File;
};

/**
 * Body_auth_database_login_auth_login_post
 */
export type BodyAuthDatabaseLoginAuthLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_reset_forgot_password_auth_forgot_password_post
 */
export type BodyResetForgotPasswordAuthForgotPasswordPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_reset_reset_password_auth_reset_password_post
 */
export type BodyResetResetPasswordAuthResetPasswordPost = {
    /**
     * Token
     */
    token: string;
    /**
     * Password
     */
    password: string;
};

/**
 * Body_upload_file_files_upload__post
 */
export type BodyUploadFileFilesUploadPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * Body_upload_multiple_files_files_upload_multiple__post
 */
export type BodyUploadMultipleFilesFilesUploadMultiplePost = {
    /**
     * Files
     */
    files: Array<Blob | File>;
};

/**
 * Body_verify_request_token_auth_request_verify_token_post
 */
export type BodyVerifyRequestTokenAuthRequestVerifyTokenPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_verify_verify_auth_verify_post
 */
export type BodyVerifyVerifyAuthVerifyPost = {
    /**
     * Token
     */
    token: string;
};

/**
 * ErrorModel
 */
export type ErrorModel = {
    /**
     * Detail
     */
    detail: string | {
        [key: string]: string;
    };
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * MenuCreate
 */
export type MenuCreate = {
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Image
     * Menu image file data
     */
    image?: (Blob | File) | null;
};

/**
 * MenuItemCategoryCreate
 */
export type MenuItemCategoryCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Menu Id
     */
    menu_id: string;
};

/**
 * MenuItemCategoryResponse
 */
export type MenuItemCategoryResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Menu Id
     */
    menu_id: string;
    /**
     * Menu Items
     */
    menu_items?: Array<MenuItemResponse> | null;
};

/**
 * MenuItemCategoryUpdate
 */
export type MenuItemCategoryUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * MenuItemCreate
 */
export type MenuItemCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price: number;
    /**
     * In Stock
     */
    in_stock?: boolean;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Is Veg
     */
    is_veg?: boolean;
    /**
     * Menu Id
     */
    menu_id: string;
    /**
     * Category Id
     */
    category_id: string;
    /**
     * Images
     * List of image file data
     */
    images?: Array<Blob | File> | null;
};

/**
 * MenuItemImageResponse
 */
export type MenuItemImageResponse = {
    /**
     * Is Primary
     */
    is_primary?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Image Url
     */
    image_url: string;
    /**
     * Menu Item Id
     */
    menu_item_id: string;
};

/**
 * MenuItemResponse
 */
export type MenuItemResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price: number;
    /**
     * In Stock
     */
    in_stock?: boolean;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Is Veg
     */
    is_veg?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Menu Id
     */
    menu_id: string;
    /**
     * Category Id
     */
    category_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Images
     */
    images?: Array<MenuItemImageResponse>;
    category?: MenuItemCategoryResponse | null;
};

/**
 * MenuItemUpdate
 */
export type MenuItemUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price?: number | null;
    /**
     * In Stock
     */
    in_stock?: boolean | null;
    /**
     * Category Id
     */
    category_id?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Is Veg
     */
    is_veg?: boolean | null;
    /**
     * Images
     * List of image file data
     */
    images?: Array<Blob | File> | null;
};

/**
 * MenuResponse
 */
export type MenuResponse = {
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Image Url
     */
    image_url?: string | null;
    /**
     * Items
     */
    items?: Array<MenuItemResponse>;
    /**
     * Categories
     */
    categories?: Array<MenuItemCategoryResponse>;
};

/**
 * MenuUpdate
 */
export type MenuUpdate = {
    /**
     * Title
     */
    title?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Image
     * Menu image file data
     */
    image?: (Blob | File) | null;
};

/**
 * MessCreate
 */
export type MessCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Owner Id
     */
    owner_id?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Currency
     */
    currency?: string | null;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * MessRead
 */
export type MessRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Owner Id
     */
    owner_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Currency
     */
    currency?: string;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * MessTableCreate
 */
export type MessTableCreate = {
    /**
     * Table Name
     */
    table_name: string;
    /**
     * Capacity
     */
    capacity: number;
    /**
     * Qr Code Url
     */
    qr_code_url?: string | null;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * MessTableRead
 */
export type MessTableRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Table Name
     */
    table_name: string;
    /**
     * Capacity
     */
    capacity: number;
    /**
     * Qr Code Url
     */
    qr_code_url?: string | null;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Is Active
     */
    is_active?: boolean;
};

/**
 * MessTableUpdate
 */
export type MessTableUpdate = {
    /**
     * Table Name
     */
    table_name?: string | null;
    /**
     * Capacity
     */
    capacity?: number | null;
    /**
     * Qr Code Url
     */
    qr_code_url?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * MessUpdate
 */
export type MessUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Slug
     */
    slug?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Currency
     */
    currency?: string | null;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * OAuth2AuthorizeResponse
 */
export type OAuth2AuthorizeResponse = {
    /**
     * Authorization Url
     */
    authorization_url: string;
};

/**
 * OrderCreate
 */
export type OrderCreate = {
    status?: OrderStatusEnum;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Table Id
     */
    table_id: string;
    /**
     * Items
     */
    items: Array<OrderItemCreate>;
};

/**
 * OrderItemCreate
 */
export type OrderItemCreate = {
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Price
     */
    price: number;
    /**
     * Menu Item Id
     */
    menu_item_id: string;
};

/**
 * OrderItemResponse
 */
export type OrderItemResponse = {
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Price
     */
    price: number;
    /**
     * Id
     */
    id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Menu Item Id
     */
    menu_item_id: string;
    menu_item?: MenuItemResponse | null;
};

/**
 * OrderItemUpdate
 */
export type OrderItemUpdate = {
    /**
     * Quantity
     */
    quantity?: number | null;
};

/**
 * OrderResponse
 */
export type OrderResponse = {
    status?: OrderStatusEnum;
    /**
     * Id
     */
    id: string;
    /**
     * Customer Id
     */
    customer_id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Table Id
     */
    table_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Items
     */
    items?: Array<OrderItemResponse>;
    /**
     * Transactions
     */
    transactions?: Array<OrderTransactionResponse>;
    customer?: UserRead | null;
    mess?: MessRead | null;
    table?: MessTableRead | null;
};

/**
 * OrderStatusEnum
 */
export type OrderStatusEnum = 'pending' | 'received' | 'preparing' | 'ready' | 'served' | 'completed' | 'cancelled';

/**
 * OrderTransactionCreate
 */
export type OrderTransactionCreate = {
    /**
     * Transaction Id
     */
    transaction_id: string;
    /**
     * Amount
     */
    amount: number;
    status?: OrderTransactionStatusEnum;
    /**
     * Order Id
     */
    order_id: string;
};

/**
 * OrderTransactionResponse
 */
export type OrderTransactionResponse = {
    /**
     * Transaction Id
     */
    transaction_id: string;
    /**
     * Amount
     */
    amount: number;
    status?: OrderTransactionStatusEnum;
    /**
     * Id
     */
    id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * OrderTransactionStatusEnum
 */
export type OrderTransactionStatusEnum = 'pending' | 'success' | 'failed';

/**
 * OrderTransactionUpdate
 */
export type OrderTransactionUpdate = {
    status?: OrderTransactionStatusEnum | null;
    /**
     * Amount
     */
    amount?: number | null;
};

/**
 * OrderUpdate
 */
export type OrderUpdate = {
    status?: OrderStatusEnum | null;
    /**
     * Table Id
     */
    table_id?: string | null;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
    /**
     * Message
     */
    message: string;
    /**
     * Status Code
     */
    status_code: number;
};

/**
 * RoleRead
 */
export type RoleRead = {
    /**
     * Id
     */
    id: string;
    role: UserRole;
};

/**
 * SpicinessEnum
 */
export type SpicinessEnum = 'low' | 'medium' | 'high';

/**
 * UploadMultipleResponse
 */
export type UploadMultipleResponse = {
    /**
     * Files
     */
    files: Array<UploadResponse>;
};

/**
 * UploadResponse
 */
export type UploadResponse = {
    /**
     * Filename
     */
    filename: string;
    /**
     * Stored Filename
     */
    stored_filename: string;
    /**
     * Size
     */
    size: number;
    /**
     * Category
     */
    category: string;
    /**
     * Mime Type
     */
    mime_type: string;
    /**
     * Url
     */
    url: string;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Is Superuser
     */
    is_superuser?: boolean | null;
    /**
     * Is Verified
     */
    is_verified?: boolean | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * UserRead
 */
export type UserRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email: string;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Is Superuser
     */
    is_superuser?: boolean;
    /**
     * Is Verified
     */
    is_verified?: boolean;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * UserRole
 */
export type UserRole = 'owner' | 'staff' | 'customer' | 'admin';

/**
 * UserUpdate
 */
export type UserUpdate = {
    /**
     * Password
     */
    password?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Is Superuser
     */
    is_superuser?: boolean | null;
    /**
     * Is Verified
     */
    is_verified?: boolean | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type AuthDatabaseLoginAuthLoginPostData = {
    body: BodyAuthDatabaseLoginAuthLoginPost;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type AuthDatabaseLoginAuthLoginPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthDatabaseLoginAuthLoginPostError = AuthDatabaseLoginAuthLoginPostErrors[keyof AuthDatabaseLoginAuthLoginPostErrors];

export type AuthDatabaseLoginAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: BearerResponse;
};

export type AuthDatabaseLoginAuthLoginPostResponse = AuthDatabaseLoginAuthLoginPostResponses[keyof AuthDatabaseLoginAuthLoginPostResponses];

export type AuthDatabaseLogoutAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type AuthDatabaseLogoutAuthLogoutPostErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
};

export type AuthDatabaseLogoutAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterRegisterAuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type RegisterRegisterAuthRegisterPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterRegisterAuthRegisterPostError = RegisterRegisterAuthRegisterPostErrors[keyof RegisterRegisterAuthRegisterPostErrors];

export type RegisterRegisterAuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: UserRead;
};

export type RegisterRegisterAuthRegisterPostResponse = RegisterRegisterAuthRegisterPostResponses[keyof RegisterRegisterAuthRegisterPostResponses];

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Scopes
         */
        scopes?: Array<string>;
    };
    url: '/auth/google/authorize';
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetError = OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors[keyof OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors];

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses = {
    /**
     * Successful Response
     */
    200: OAuth2AuthorizeResponse;
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponse = OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses[keyof OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses];

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Code
         */
        code?: string | null;
        /**
         * Code Verifier
         */
        code_verifier?: string | null;
        /**
         * State
         */
        state?: string | null;
        /**
         * Error
         */
        error?: string | null;
    };
    url: '/auth/google/callback';
};

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetError = OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors[keyof OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors];

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResetForgotPasswordAuthForgotPasswordPostData = {
    body: BodyResetForgotPasswordAuthForgotPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/forgot-password';
};

export type ResetForgotPasswordAuthForgotPasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetForgotPasswordAuthForgotPasswordPostError = ResetForgotPasswordAuthForgotPasswordPostErrors[keyof ResetForgotPasswordAuthForgotPasswordPostErrors];

export type ResetForgotPasswordAuthForgotPasswordPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type ResetResetPasswordAuthResetPasswordPostData = {
    body: BodyResetResetPasswordAuthResetPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/reset-password';
};

export type ResetResetPasswordAuthResetPasswordPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetResetPasswordAuthResetPasswordPostError = ResetResetPasswordAuthResetPasswordPostErrors[keyof ResetResetPasswordAuthResetPasswordPostErrors];

export type ResetResetPasswordAuthResetPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostData = {
    body: BodyVerifyRequestTokenAuthRequestVerifyTokenPost;
    path?: never;
    query?: never;
    url: '/auth/request-verify-token';
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostError = VerifyRequestTokenAuthRequestVerifyTokenPostErrors[keyof VerifyRequestTokenAuthRequestVerifyTokenPostErrors];

export type VerifyRequestTokenAuthRequestVerifyTokenPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type VerifyVerifyAuthVerifyPostData = {
    body: BodyVerifyVerifyAuthVerifyPost;
    path?: never;
    query?: never;
    url: '/auth/verify';
};

export type VerifyVerifyAuthVerifyPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyVerifyAuthVerifyPostError = VerifyVerifyAuthVerifyPostErrors[keyof VerifyVerifyAuthVerifyPostErrors];

export type VerifyVerifyAuthVerifyPostResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type VerifyVerifyAuthVerifyPostResponse = VerifyVerifyAuthVerifyPostResponses[keyof VerifyVerifyAuthVerifyPostResponses];

export type MyCustomersAuthMyCustomersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/my-customers';
};

export type MyCustomersAuthMyCustomersGetResponses = {
    /**
     * Response My Customers Auth My Customers Get
     * Successful Response
     */
    200: Array<UserRead>;
};

export type MyCustomersAuthMyCustomersGetResponse = MyCustomersAuthMyCustomersGetResponses[keyof MyCustomersAuthMyCustomersGetResponses];

export type UploadFileFilesUploadPostData = {
    body: BodyUploadFileFilesUploadPost;
    path?: never;
    query?: never;
    url: '/files/upload/';
};

export type UploadFileFilesUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadFileFilesUploadPostError = UploadFileFilesUploadPostErrors[keyof UploadFileFilesUploadPostErrors];

export type UploadFileFilesUploadPostResponses = {
    /**
     * Successful Response
     */
    200: UploadResponse;
};

export type UploadFileFilesUploadPostResponse = UploadFileFilesUploadPostResponses[keyof UploadFileFilesUploadPostResponses];

export type UploadMultipleFilesFilesUploadMultiplePostData = {
    body: BodyUploadMultipleFilesFilesUploadMultiplePost;
    path?: never;
    query?: never;
    url: '/files/upload/multiple/';
};

export type UploadMultipleFilesFilesUploadMultiplePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadMultipleFilesFilesUploadMultiplePostError = UploadMultipleFilesFilesUploadMultiplePostErrors[keyof UploadMultipleFilesFilesUploadMultiplePostErrors];

export type UploadMultipleFilesFilesUploadMultiplePostResponses = {
    /**
     * Successful Response
     */
    200: UploadMultipleResponse;
};

export type UploadMultipleFilesFilesUploadMultiplePostResponse = UploadMultipleFilesFilesUploadMultiplePostResponses[keyof UploadMultipleFilesFilesUploadMultiplePostResponses];

export type DeleteFileFilesCategoryFilenameDeleteData = {
    body?: never;
    path: {
        /**
         * Category
         */
        category: string;
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{category}/{filename}';
};

export type DeleteFileFilesCategoryFilenameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileFilesCategoryFilenameDeleteError = DeleteFileFilesCategoryFilenameDeleteErrors[keyof DeleteFileFilesCategoryFilenameDeleteErrors];

export type DeleteFileFilesCategoryFilenameDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetFileFilesCategoryFilenameGetData = {
    body?: never;
    path: {
        /**
         * Category
         */
        category: string;
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{category}/{filename}';
};

export type GetFileFilesCategoryFilenameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFileFilesCategoryFilenameGetError = GetFileFilesCategoryFilenameGetErrors[keyof GetFileFilesCategoryFilenameGetErrors];

export type GetFileFilesCategoryFilenameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUploadInfoFilesInfoGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/files/info';
};

export type GetUploadInfoFilesInfoGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UsersCurrentUserUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type UsersCurrentUserUsersMeGetErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
};

export type UsersCurrentUserUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersCurrentUserUsersMeGetResponse = UsersCurrentUserUsersMeGetResponses[keyof UsersCurrentUserUsersMeGetResponses];

export type UsersPatchCurrentUserUsersMePatchData = {
    body: UserUpdate;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type UsersPatchCurrentUserUsersMePatchErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersPatchCurrentUserUsersMePatchError = UsersPatchCurrentUserUsersMePatchErrors[keyof UsersPatchCurrentUserUsersMePatchErrors];

export type UsersPatchCurrentUserUsersMePatchResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersPatchCurrentUserUsersMePatchResponse = UsersPatchCurrentUserUsersMePatchResponses[keyof UsersPatchCurrentUserUsersMePatchResponses];

export type UsersDeleteUserUsersIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersDeleteUserUsersIdDeleteErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersDeleteUserUsersIdDeleteError = UsersDeleteUserUsersIdDeleteErrors[keyof UsersDeleteUserUsersIdDeleteErrors];

export type UsersDeleteUserUsersIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type UsersDeleteUserUsersIdDeleteResponse = UsersDeleteUserUsersIdDeleteResponses[keyof UsersDeleteUserUsersIdDeleteResponses];

export type UsersUserUsersIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersUserUsersIdGetErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersUserUsersIdGetError = UsersUserUsersIdGetErrors[keyof UsersUserUsersIdGetErrors];

export type UsersUserUsersIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersUserUsersIdGetResponse = UsersUserUsersIdGetResponses[keyof UsersUserUsersIdGetResponses];

export type UsersPatchUserUsersIdPatchData = {
    body: UserUpdate;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersPatchUserUsersIdPatchErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersPatchUserUsersIdPatchError = UsersPatchUserUsersIdPatchErrors[keyof UsersPatchUserUsersIdPatchErrors];

export type UsersPatchUserUsersIdPatchResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersPatchUserUsersIdPatchResponse = UsersPatchUserUsersIdPatchResponses[keyof UsersPatchUserUsersIdPatchResponses];

export type GetMessesMessGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/mess/';
};

export type GetMessesMessGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessesMessGetError = GetMessesMessGetErrors[keyof GetMessesMessGetErrors];

export type GetMessesMessGetResponses = {
    /**
     * Response Get Messes Mess  Get
     * Successful Response
     */
    200: Array<MessRead>;
};

export type GetMessesMessGetResponse = GetMessesMessGetResponses[keyof GetMessesMessGetResponses];

export type CreateMessMessPostData = {
    body: MessCreate;
    path?: never;
    query?: never;
    url: '/mess/';
};

export type CreateMessMessPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessMessPostError = CreateMessMessPostErrors[keyof CreateMessMessPostErrors];

export type CreateMessMessPostResponses = {
    /**
     * Successful Response
     */
    201: MessRead;
};

export type CreateMessMessPostResponse = CreateMessMessPostResponses[keyof CreateMessMessPostResponses];

export type GetMessBySlugMessSlugGetData = {
    body?: never;
    path: {
        /**
         * Slug
         */
        slug: string;
    };
    query?: never;
    url: '/mess/{slug}';
};

export type GetMessBySlugMessSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessBySlugMessSlugGetError = GetMessBySlugMessSlugGetErrors[keyof GetMessBySlugMessSlugGetErrors];

export type GetMessBySlugMessSlugGetResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type GetMessBySlugMessSlugGetResponse = GetMessBySlugMessSlugGetResponses[keyof GetMessBySlugMessSlugGetResponses];

export type WhoamiMessSlugWhoamiGetData = {
    body?: never;
    path: {
        /**
         * Slug
         */
        slug: string;
    };
    query?: never;
    url: '/mess/{slug}/whoami';
};

export type WhoamiMessSlugWhoamiGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WhoamiMessSlugWhoamiGetError = WhoamiMessSlugWhoamiGetErrors[keyof WhoamiMessSlugWhoamiGetErrors];

export type WhoamiMessSlugWhoamiGetResponses = {
    /**
     * Successful Response
     */
    200: RoleRead;
};

export type WhoamiMessSlugWhoamiGetResponse = WhoamiMessSlugWhoamiGetResponses[keyof WhoamiMessSlugWhoamiGetResponses];

export type DeleteMessMessMessIdDeleteData = {
    body?: never;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type DeleteMessMessMessIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMessMessMessIdDeleteError = DeleteMessMessMessIdDeleteErrors[keyof DeleteMessMessMessIdDeleteErrors];

export type DeleteMessMessMessIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMessMessMessIdGetData = {
    body?: never;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type GetMessMessMessIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessMessMessIdGetError = GetMessMessMessIdGetErrors[keyof GetMessMessMessIdGetErrors];

export type GetMessMessMessIdGetResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type GetMessMessMessIdGetResponse = GetMessMessMessIdGetResponses[keyof GetMessMessMessIdGetResponses];

export type UpdateMessMessMessIdPutData = {
    body: MessUpdate;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type UpdateMessMessMessIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMessMessMessIdPutError = UpdateMessMessMessIdPutErrors[keyof UpdateMessMessMessIdPutErrors];

export type UpdateMessMessMessIdPutResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type UpdateMessMessMessIdPutResponse = UpdateMessMessMessIdPutResponses[keyof UpdateMessMessMessIdPutResponses];

export type GetMessTablesMessMessIdTablesGetData = {
    body?: never;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/mess/{mess_id}/tables/';
};

export type GetMessTablesMessMessIdTablesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessTablesMessMessIdTablesGetError = GetMessTablesMessMessIdTablesGetErrors[keyof GetMessTablesMessMessIdTablesGetErrors];

export type GetMessTablesMessMessIdTablesGetResponses = {
    /**
     * Response Get Mess Tables Mess  Mess Id  Tables  Get
     * Successful Response
     */
    200: Array<MessTableRead>;
};

export type GetMessTablesMessMessIdTablesGetResponse = GetMessTablesMessMessIdTablesGetResponses[keyof GetMessTablesMessMessIdTablesGetResponses];

export type CreateMessTableMessMessIdTablesPostData = {
    body: MessTableCreate;
    path?: never;
    query?: never;
    url: '/mess/{mess_id}/tables/';
};

export type CreateMessTableMessMessIdTablesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessTableMessMessIdTablesPostError = CreateMessTableMessMessIdTablesPostErrors[keyof CreateMessTableMessMessIdTablesPostErrors];

export type CreateMessTableMessMessIdTablesPostResponses = {
    /**
     * Successful Response
     */
    201: MessTableRead;
};

export type CreateMessTableMessMessIdTablesPostResponse = CreateMessTableMessMessIdTablesPostResponses[keyof CreateMessTableMessMessIdTablesPostResponses];

export type DeleteMessTableMessMessIdTablesTableIdDeleteData = {
    body?: never;
    path: {
        /**
         * Table Id
         */
        table_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}/tables/{table_id}';
};

export type DeleteMessTableMessMessIdTablesTableIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMessTableMessMessIdTablesTableIdDeleteError = DeleteMessTableMessMessIdTablesTableIdDeleteErrors[keyof DeleteMessTableMessMessIdTablesTableIdDeleteErrors];

export type DeleteMessTableMessMessIdTablesTableIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMessTableMessMessIdTablesTableIdGetData = {
    body?: never;
    path: {
        /**
         * Table Id
         */
        table_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}/tables/{table_id}';
};

export type GetMessTableMessMessIdTablesTableIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessTableMessMessIdTablesTableIdGetError = GetMessTableMessMessIdTablesTableIdGetErrors[keyof GetMessTableMessMessIdTablesTableIdGetErrors];

export type GetMessTableMessMessIdTablesTableIdGetResponses = {
    /**
     * Successful Response
     */
    200: MessTableRead;
};

export type GetMessTableMessMessIdTablesTableIdGetResponse = GetMessTableMessMessIdTablesTableIdGetResponses[keyof GetMessTableMessMessIdTablesTableIdGetResponses];

export type UpdateMessTableMessMessIdTablesTableIdPutData = {
    body: MessTableUpdate;
    path: {
        /**
         * Table Id
         */
        table_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}/tables/{table_id}';
};

export type UpdateMessTableMessMessIdTablesTableIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMessTableMessMessIdTablesTableIdPutError = UpdateMessTableMessMessIdTablesTableIdPutErrors[keyof UpdateMessTableMessMessIdTablesTableIdPutErrors];

export type UpdateMessTableMessMessIdTablesTableIdPutResponses = {
    /**
     * Successful Response
     */
    200: MessTableRead;
};

export type UpdateMessTableMessMessIdTablesTableIdPutResponse = UpdateMessTableMessMessIdTablesTableIdPutResponses[keyof UpdateMessTableMessMessIdTablesTableIdPutResponses];

export type CreateMenuMenuPostData = {
    body: MenuCreate;
    path?: never;
    query?: never;
    url: '/menu/';
};

export type CreateMenuMenuPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMenuMenuPostError = CreateMenuMenuPostErrors[keyof CreateMenuMenuPostErrors];

export type CreateMenuMenuPostResponses = {
    /**
     * Successful Response
     */
    200: MenuResponse;
};

export type CreateMenuMenuPostResponse = CreateMenuMenuPostResponses[keyof CreateMenuMenuPostResponses];

export type DeleteMenuMenuMenuIdDeleteData = {
    body?: never;
    path: {
        /**
         * Menu Id
         */
        menu_id: string;
    };
    query?: never;
    url: '/menu/{menu_id}';
};

export type DeleteMenuMenuMenuIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMenuMenuMenuIdDeleteError = DeleteMenuMenuMenuIdDeleteErrors[keyof DeleteMenuMenuMenuIdDeleteErrors];

export type DeleteMenuMenuMenuIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMenuMenuMenuIdDeleteResponse = DeleteMenuMenuMenuIdDeleteResponses[keyof DeleteMenuMenuMenuIdDeleteResponses];

export type GetMenuMenuMenuIdGetData = {
    body?: never;
    path: {
        /**
         * Menu Id
         */
        menu_id: string;
    };
    query?: never;
    url: '/menu/{menu_id}';
};

export type GetMenuMenuMenuIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuMenuMenuIdGetError = GetMenuMenuMenuIdGetErrors[keyof GetMenuMenuMenuIdGetErrors];

export type GetMenuMenuMenuIdGetResponses = {
    /**
     * Successful Response
     */
    200: MenuResponse;
};

export type GetMenuMenuMenuIdGetResponse = GetMenuMenuMenuIdGetResponses[keyof GetMenuMenuMenuIdGetResponses];

export type UpdateMenuMenuMenuIdPutData = {
    body: MenuUpdate;
    path: {
        /**
         * Menu Id
         */
        menu_id: string;
    };
    query?: never;
    url: '/menu/{menu_id}';
};

export type UpdateMenuMenuMenuIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMenuMenuMenuIdPutError = UpdateMenuMenuMenuIdPutErrors[keyof UpdateMenuMenuMenuIdPutErrors];

export type UpdateMenuMenuMenuIdPutResponses = {
    /**
     * Successful Response
     */
    200: MenuResponse;
};

export type UpdateMenuMenuMenuIdPutResponse = UpdateMenuMenuMenuIdPutResponses[keyof UpdateMenuMenuMenuIdPutResponses];

export type CreateCategoryMenuCategoryPostData = {
    body: MenuItemCategoryCreate;
    path?: never;
    query?: never;
    url: '/menu/category';
};

export type CreateCategoryMenuCategoryPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCategoryMenuCategoryPostError = CreateCategoryMenuCategoryPostErrors[keyof CreateCategoryMenuCategoryPostErrors];

export type CreateCategoryMenuCategoryPostResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type CreateCategoryMenuCategoryPostResponse = CreateCategoryMenuCategoryPostResponses[keyof CreateCategoryMenuCategoryPostResponses];

export type DeleteCategoryMenuCategoryCategoryIdDeleteData = {
    body?: never;
    path: {
        /**
         * Category Id
         */
        category_id: string;
    };
    query?: never;
    url: '/menu/category/{category_id}';
};

export type DeleteCategoryMenuCategoryCategoryIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCategoryMenuCategoryCategoryIdDeleteError = DeleteCategoryMenuCategoryCategoryIdDeleteErrors[keyof DeleteCategoryMenuCategoryCategoryIdDeleteErrors];

export type DeleteCategoryMenuCategoryCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteCategoryMenuCategoryCategoryIdDeleteResponse = DeleteCategoryMenuCategoryCategoryIdDeleteResponses[keyof DeleteCategoryMenuCategoryCategoryIdDeleteResponses];

export type GetCategoryMenuCategoryCategoryIdGetData = {
    body?: never;
    path: {
        /**
         * Category Id
         */
        category_id: string;
    };
    query?: never;
    url: '/menu/category/{category_id}';
};

export type GetCategoryMenuCategoryCategoryIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryMenuCategoryCategoryIdGetError = GetCategoryMenuCategoryCategoryIdGetErrors[keyof GetCategoryMenuCategoryCategoryIdGetErrors];

export type GetCategoryMenuCategoryCategoryIdGetResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type GetCategoryMenuCategoryCategoryIdGetResponse = GetCategoryMenuCategoryCategoryIdGetResponses[keyof GetCategoryMenuCategoryCategoryIdGetResponses];

export type UpdateCategoryMenuCategoryCategoryIdPutData = {
    body: MenuItemCategoryUpdate;
    path: {
        /**
         * Category Id
         */
        category_id: string;
    };
    query?: never;
    url: '/menu/category/{category_id}';
};

export type UpdateCategoryMenuCategoryCategoryIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCategoryMenuCategoryCategoryIdPutError = UpdateCategoryMenuCategoryCategoryIdPutErrors[keyof UpdateCategoryMenuCategoryCategoryIdPutErrors];

export type UpdateCategoryMenuCategoryCategoryIdPutResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type UpdateCategoryMenuCategoryCategoryIdPutResponse = UpdateCategoryMenuCategoryCategoryIdPutResponses[keyof UpdateCategoryMenuCategoryCategoryIdPutResponses];

export type CreateMenuItemMenuItemPostData = {
    body: MenuItemCreate;
    path?: never;
    query?: never;
    url: '/menu/item';
};

export type CreateMenuItemMenuItemPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMenuItemMenuItemPostError = CreateMenuItemMenuItemPostErrors[keyof CreateMenuItemMenuItemPostErrors];

export type CreateMenuItemMenuItemPostResponses = {
    /**
     * Successful Response
     */
    200: MenuItemResponse;
};

export type CreateMenuItemMenuItemPostResponse = CreateMenuItemMenuItemPostResponses[keyof CreateMenuItemMenuItemPostResponses];

export type DeleteMenuItemMenuItemItemIdDeleteData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/menu/item/{item_id}';
};

export type DeleteMenuItemMenuItemItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMenuItemMenuItemItemIdDeleteError = DeleteMenuItemMenuItemItemIdDeleteErrors[keyof DeleteMenuItemMenuItemItemIdDeleteErrors];

export type DeleteMenuItemMenuItemItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMenuItemMenuItemItemIdDeleteResponse = DeleteMenuItemMenuItemItemIdDeleteResponses[keyof DeleteMenuItemMenuItemItemIdDeleteResponses];

export type GetMenuItemMenuItemItemIdGetData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/menu/item/{item_id}';
};

export type GetMenuItemMenuItemItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuItemMenuItemItemIdGetError = GetMenuItemMenuItemItemIdGetErrors[keyof GetMenuItemMenuItemItemIdGetErrors];

export type GetMenuItemMenuItemItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: MenuItemResponse;
};

export type GetMenuItemMenuItemItemIdGetResponse = GetMenuItemMenuItemItemIdGetResponses[keyof GetMenuItemMenuItemItemIdGetResponses];

export type UpdateMenuItemMenuItemItemIdPutData = {
    body: MenuItemUpdate;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/menu/item/{item_id}';
};

export type UpdateMenuItemMenuItemItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMenuItemMenuItemItemIdPutError = UpdateMenuItemMenuItemItemIdPutErrors[keyof UpdateMenuItemMenuItemItemIdPutErrors];

export type UpdateMenuItemMenuItemItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: MenuItemResponse;
};

export type UpdateMenuItemMenuItemItemIdPutResponse = UpdateMenuItemMenuItemItemIdPutResponses[keyof UpdateMenuItemMenuItemItemIdPutResponses];

export type AddMenuItemImageMenuItemItemIdImagePostData = {
    body: BodyAddMenuItemImageMenuItemItemIdImagePost;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: {
        /**
         * Is Primary
         */
        is_primary?: boolean;
    };
    url: '/menu/item/{item_id}/image';
};

export type AddMenuItemImageMenuItemItemIdImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddMenuItemImageMenuItemItemIdImagePostError = AddMenuItemImageMenuItemItemIdImagePostErrors[keyof AddMenuItemImageMenuItemItemIdImagePostErrors];

export type AddMenuItemImageMenuItemItemIdImagePostResponses = {
    /**
     * Successful Response
     */
    200: MenuItemImageResponse;
};

export type AddMenuItemImageMenuItemItemIdImagePostResponse = AddMenuItemImageMenuItemItemIdImagePostResponses[keyof AddMenuItemImageMenuItemItemIdImagePostResponses];

export type DeleteMenuItemImageMenuItemImageImageIdDeleteData = {
    body?: never;
    path: {
        /**
         * Image Id
         */
        image_id: string;
    };
    query?: never;
    url: '/menu/item/image/{image_id}';
};

export type DeleteMenuItemImageMenuItemImageImageIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMenuItemImageMenuItemImageImageIdDeleteError = DeleteMenuItemImageMenuItemImageImageIdDeleteErrors[keyof DeleteMenuItemImageMenuItemImageImageIdDeleteErrors];

export type DeleteMenuItemImageMenuItemImageImageIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMenuItemImageMenuItemImageImageIdDeleteResponse = DeleteMenuItemImageMenuItemImageImageIdDeleteResponses[keyof DeleteMenuItemImageMenuItemImageImageIdDeleteResponses];

export type CreateOrderOrdersPostData = {
    body: OrderCreate;
    path?: never;
    query?: never;
    url: '/orders/';
};

export type CreateOrderOrdersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOrderOrdersPostError = CreateOrderOrdersPostErrors[keyof CreateOrderOrdersPostErrors];

export type CreateOrderOrdersPostResponses = {
    /**
     * Successful Response
     */
    200: OrderResponse;
};

export type CreateOrderOrdersPostResponse = CreateOrderOrdersPostResponses[keyof CreateOrderOrdersPostResponses];

export type DeleteOrderOrdersOrderIdDeleteData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/orders/{order_id}';
};

export type DeleteOrderOrdersOrderIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOrderOrdersOrderIdDeleteError = DeleteOrderOrdersOrderIdDeleteErrors[keyof DeleteOrderOrdersOrderIdDeleteErrors];

export type DeleteOrderOrdersOrderIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteOrderOrdersOrderIdDeleteResponse = DeleteOrderOrdersOrderIdDeleteResponses[keyof DeleteOrderOrdersOrderIdDeleteResponses];

export type GetOrderOrdersOrderIdGetData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/orders/{order_id}';
};

export type GetOrderOrdersOrderIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderOrdersOrderIdGetError = GetOrderOrdersOrderIdGetErrors[keyof GetOrderOrdersOrderIdGetErrors];

export type GetOrderOrdersOrderIdGetResponses = {
    /**
     * Successful Response
     */
    200: OrderResponse;
};

export type GetOrderOrdersOrderIdGetResponse = GetOrderOrdersOrderIdGetResponses[keyof GetOrderOrdersOrderIdGetResponses];

export type UpdateOrderOrdersOrderIdPutData = {
    body: OrderUpdate;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/orders/{order_id}';
};

export type UpdateOrderOrdersOrderIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderOrdersOrderIdPutError = UpdateOrderOrdersOrderIdPutErrors[keyof UpdateOrderOrdersOrderIdPutErrors];

export type UpdateOrderOrdersOrderIdPutResponses = {
    /**
     * Successful Response
     */
    200: OrderResponse;
};

export type UpdateOrderOrdersOrderIdPutResponse = UpdateOrderOrdersOrderIdPutResponses[keyof UpdateOrderOrdersOrderIdPutResponses];

export type AddOrderItemOrdersOrderIdItemsPostData = {
    body: OrderItemCreate;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/orders/{order_id}/items';
};

export type AddOrderItemOrdersOrderIdItemsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddOrderItemOrdersOrderIdItemsPostError = AddOrderItemOrdersOrderIdItemsPostErrors[keyof AddOrderItemOrdersOrderIdItemsPostErrors];

export type AddOrderItemOrdersOrderIdItemsPostResponses = {
    /**
     * Successful Response
     */
    200: OrderItemResponse;
};

export type AddOrderItemOrdersOrderIdItemsPostResponse = AddOrderItemOrdersOrderIdItemsPostResponses[keyof AddOrderItemOrdersOrderIdItemsPostResponses];

export type DeleteOrderItemOrdersItemsItemIdDeleteData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/orders/items/{item_id}';
};

export type DeleteOrderItemOrdersItemsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOrderItemOrdersItemsItemIdDeleteError = DeleteOrderItemOrdersItemsItemIdDeleteErrors[keyof DeleteOrderItemOrdersItemsItemIdDeleteErrors];

export type DeleteOrderItemOrdersItemsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteOrderItemOrdersItemsItemIdDeleteResponse = DeleteOrderItemOrdersItemsItemIdDeleteResponses[keyof DeleteOrderItemOrdersItemsItemIdDeleteResponses];

export type UpdateOrderItemOrdersItemsItemIdPutData = {
    body: OrderItemUpdate;
    path: {
        /**
         * Item Id
         */
        item_id: string;
    };
    query?: never;
    url: '/orders/items/{item_id}';
};

export type UpdateOrderItemOrdersItemsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderItemOrdersItemsItemIdPutError = UpdateOrderItemOrdersItemsItemIdPutErrors[keyof UpdateOrderItemOrdersItemsItemIdPutErrors];

export type UpdateOrderItemOrdersItemsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: OrderItemResponse;
};

export type UpdateOrderItemOrdersItemsItemIdPutResponse = UpdateOrderItemOrdersItemsItemIdPutResponses[keyof UpdateOrderItemOrdersItemsItemIdPutResponses];

export type CreateOrderTransactionOrdersOrderIdTransactionsPostData = {
    body: OrderTransactionCreate;
    path: {
        /**
         * Order Id
         */
        order_id: string;
    };
    query?: never;
    url: '/orders/{order_id}/transactions';
};

export type CreateOrderTransactionOrdersOrderIdTransactionsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOrderTransactionOrdersOrderIdTransactionsPostError = CreateOrderTransactionOrdersOrderIdTransactionsPostErrors[keyof CreateOrderTransactionOrdersOrderIdTransactionsPostErrors];

export type CreateOrderTransactionOrdersOrderIdTransactionsPostResponses = {
    /**
     * Successful Response
     */
    200: OrderTransactionResponse;
};

export type CreateOrderTransactionOrdersOrderIdTransactionsPostResponse = CreateOrderTransactionOrdersOrderIdTransactionsPostResponses[keyof CreateOrderTransactionOrdersOrderIdTransactionsPostResponses];

export type GetOrderTransactionOrdersTransactionsTransactionIdGetData = {
    body?: never;
    path: {
        /**
         * Transaction Id
         */
        transaction_id: string;
    };
    query?: never;
    url: '/orders/transactions/{transaction_id}';
};

export type GetOrderTransactionOrdersTransactionsTransactionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderTransactionOrdersTransactionsTransactionIdGetError = GetOrderTransactionOrdersTransactionsTransactionIdGetErrors[keyof GetOrderTransactionOrdersTransactionsTransactionIdGetErrors];

export type GetOrderTransactionOrdersTransactionsTransactionIdGetResponses = {
    /**
     * Successful Response
     */
    200: OrderTransactionResponse;
};

export type GetOrderTransactionOrdersTransactionsTransactionIdGetResponse = GetOrderTransactionOrdersTransactionsTransactionIdGetResponses[keyof GetOrderTransactionOrdersTransactionsTransactionIdGetResponses];

export type UpdateOrderTransactionOrdersTransactionsTransactionIdPutData = {
    body: OrderTransactionUpdate;
    path: {
        /**
         * Transaction Id
         */
        transaction_id: string;
    };
    query?: never;
    url: '/orders/transactions/{transaction_id}';
};

export type UpdateOrderTransactionOrdersTransactionsTransactionIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderTransactionOrdersTransactionsTransactionIdPutError = UpdateOrderTransactionOrdersTransactionsTransactionIdPutErrors[keyof UpdateOrderTransactionOrdersTransactionsTransactionIdPutErrors];

export type UpdateOrderTransactionOrdersTransactionsTransactionIdPutResponses = {
    /**
     * Successful Response
     */
    200: OrderTransactionResponse;
};

export type UpdateOrderTransactionOrdersTransactionsTransactionIdPutResponse = UpdateOrderTransactionOrdersTransactionsTransactionIdPutResponses[keyof UpdateOrderTransactionOrdersTransactionsTransactionIdPutResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: ResponseMessage;
};

export type ReadRootGetResponse = ReadRootGetResponses[keyof ReadRootGetResponses];

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadItemItemsItemIdGetData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: number;
    };
    query?: {
        /**
         * Q
         */
        q?: string | null;
    };
    url: '/items/{item_id}';
};

export type ReadItemItemsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadItemItemsItemIdGetError = ReadItemItemsItemIdGetErrors[keyof ReadItemItemsItemIdGetErrors];

export type ReadItemItemsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8000' | (string & {});
};