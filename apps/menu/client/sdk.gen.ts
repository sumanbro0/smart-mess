// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, urlSearchParamsBodySerializer, formDataBodySerializer } from '@hey-api/client-axios';
import type { AuthDatabaseLoginAuthLoginPostData, AuthDatabaseLoginAuthLoginPostResponses, AuthDatabaseLoginAuthLoginPostErrors, AuthDatabaseLogoutAuthLogoutPostData, AuthDatabaseLogoutAuthLogoutPostResponses, AuthDatabaseLogoutAuthLogoutPostErrors, RegisterRegisterAuthRegisterPostData, RegisterRegisterAuthRegisterPostResponses, RegisterRegisterAuthRegisterPostErrors, OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetData, OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses, OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors, OauthGoogleDatabaseCallbackAuthGoogleCallbackGetData, OauthGoogleDatabaseCallbackAuthGoogleCallbackGetResponses, OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors, ResetForgotPasswordAuthForgotPasswordPostData, ResetForgotPasswordAuthForgotPasswordPostResponses, ResetForgotPasswordAuthForgotPasswordPostErrors, ResetResetPasswordAuthResetPasswordPostData, ResetResetPasswordAuthResetPasswordPostResponses, ResetResetPasswordAuthResetPasswordPostErrors, VerifyRequestTokenAuthRequestVerifyTokenPostData, VerifyRequestTokenAuthRequestVerifyTokenPostResponses, VerifyRequestTokenAuthRequestVerifyTokenPostErrors, VerifyVerifyAuthVerifyPostData, VerifyVerifyAuthVerifyPostResponses, VerifyVerifyAuthVerifyPostErrors, AuthCustomerDatabaseLoginAuthCustomerLoginPostData, AuthCustomerDatabaseLoginAuthCustomerLoginPostResponses, AuthCustomerDatabaseLoginAuthCustomerLoginPostErrors, AuthCustomerDatabaseLogoutAuthCustomerLogoutPostData, AuthCustomerDatabaseLogoutAuthCustomerLogoutPostResponses, AuthCustomerDatabaseLogoutAuthCustomerLogoutPostErrors, RegisterRegisterAuthCustomerRegisterPostData, RegisterRegisterAuthCustomerRegisterPostResponses, RegisterRegisterAuthCustomerRegisterPostErrors, OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetData, OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponses, OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetErrors, OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetData, OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetResponses, OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetErrors, ResetForgotPasswordAuthCustomerForgotPasswordPostData, ResetForgotPasswordAuthCustomerForgotPasswordPostResponses, ResetForgotPasswordAuthCustomerForgotPasswordPostErrors, ResetResetPasswordAuthCustomerResetPasswordPostData, ResetResetPasswordAuthCustomerResetPasswordPostResponses, ResetResetPasswordAuthCustomerResetPasswordPostErrors, VerifyRequestTokenAuthCustomerRequestVerifyTokenPostData, VerifyRequestTokenAuthCustomerRequestVerifyTokenPostResponses, VerifyRequestTokenAuthCustomerRequestVerifyTokenPostErrors, VerifyVerifyAuthCustomerVerifyPostData, VerifyVerifyAuthCustomerVerifyPostResponses, VerifyVerifyAuthCustomerVerifyPostErrors, CreateCustomerSessionAuthMessSlugCustomerSessionPostData, CreateCustomerSessionAuthMessSlugCustomerSessionPostResponses, CreateCustomerSessionAuthMessSlugCustomerSessionPostErrors, GetMeAuthCustomerMeGetData, GetMeAuthCustomerMeGetResponses, GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetData, GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponses, GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetErrors, UploadFileFilesUploadPostData, UploadFileFilesUploadPostResponses, UploadFileFilesUploadPostErrors, UploadMultipleFilesFilesUploadMultiplePostData, UploadMultipleFilesFilesUploadMultiplePostResponses, UploadMultipleFilesFilesUploadMultiplePostErrors, DeleteFileFilesCategoryFilenameDeleteData, DeleteFileFilesCategoryFilenameDeleteResponses, DeleteFileFilesCategoryFilenameDeleteErrors, GetFileFilesCategoryFilenameGetData, GetFileFilesCategoryFilenameGetResponses, GetFileFilesCategoryFilenameGetErrors, GetUploadInfoFilesInfoGetData, GetUploadInfoFilesInfoGetResponses, UsersCurrentUserUsersMeGetData, UsersCurrentUserUsersMeGetResponses, UsersCurrentUserUsersMeGetErrors, UsersPatchCurrentUserUsersMePatchData, UsersPatchCurrentUserUsersMePatchResponses, UsersPatchCurrentUserUsersMePatchErrors, UsersDeleteUserUsersIdDeleteData, UsersDeleteUserUsersIdDeleteResponses, UsersDeleteUserUsersIdDeleteErrors, UsersUserUsersIdGetData, UsersUserUsersIdGetResponses, UsersUserUsersIdGetErrors, UsersPatchUserUsersIdPatchData, UsersPatchUserUsersIdPatchResponses, UsersPatchUserUsersIdPatchErrors, GetMessesMessGetData, GetMessesMessGetResponses, GetMessesMessGetErrors, CreateMessMessPostData, CreateMessMessPostResponses, CreateMessMessPostErrors, GetMessBySlugMessSlugGetData, GetMessBySlugMessSlugGetResponses, GetMessBySlugMessSlugGetErrors, GetMessBySlugPublicMessSlugPublicGetData, GetMessBySlugPublicMessSlugPublicGetResponses, GetMessBySlugPublicMessSlugPublicGetErrors, WhoamiMessSlugWhoamiGetData, WhoamiMessSlugWhoamiGetResponses, WhoamiMessSlugWhoamiGetErrors, DeleteMessMessMessIdDeleteData, DeleteMessMessMessIdDeleteResponses, DeleteMessMessMessIdDeleteErrors, GetMessMessMessIdGetData, GetMessMessMessIdGetResponses, GetMessMessMessIdGetErrors, UpdateMessMessMessIdPutData, UpdateMessMessMessIdPutResponses, UpdateMessMessMessIdPutErrors, GetCustomersMessMessSlugCustomersGetData, GetCustomersMessMessSlugCustomersGetResponses, GetCustomersMessMessSlugCustomersGetErrors, GetMessTablesMessMessSlugTablesGetData, GetMessTablesMessMessSlugTablesGetResponses, GetMessTablesMessMessSlugTablesGetErrors, CreateMessTableMessMessSlugTablesPostData, CreateMessTableMessMessSlugTablesPostResponses, CreateMessTableMessMessSlugTablesPostErrors, DeleteMessTableMessMessSlugTablesTableIdDeleteData, DeleteMessTableMessMessSlugTablesTableIdDeleteResponses, DeleteMessTableMessMessSlugTablesTableIdDeleteErrors, GetMessTableMessMessSlugTablesTableIdGetData, GetMessTableMessMessSlugTablesTableIdGetResponses, GetMessTableMessMessSlugTablesTableIdGetErrors, UpdateMessTableMessMessSlugTablesTableIdPutData, UpdateMessTableMessMessSlugTablesTableIdPutResponses, UpdateMessTableMessMessSlugTablesTableIdPutErrors, DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetData, DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetResponses, DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetErrors, GetCategoriesMessSlugMenuCategoriesGetData, GetCategoriesMessSlugMenuCategoriesGetResponses, GetCategoriesMessSlugMenuCategoriesGetErrors, CreateCategoryMessSlugMenuCategoriesPostData, CreateCategoryMessSlugMenuCategoriesPostResponses, CreateCategoryMessSlugMenuCategoriesPostErrors, DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteData, DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponses, DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteErrors, GetCategoryMessSlugMenuCategoriesCategoryIdGetData, GetCategoryMessSlugMenuCategoriesCategoryIdGetResponses, GetCategoryMessSlugMenuCategoriesCategoryIdGetErrors, UpdateCategoryMessSlugMenuCategoriesCategoryIdPutData, UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponses, UpdateCategoryMessSlugMenuCategoriesCategoryIdPutErrors, GetMenuItemsMessSlugMenuItemsGetData, GetMenuItemsMessSlugMenuItemsGetResponses, GetMenuItemsMessSlugMenuItemsGetErrors, CreateMenuItemMessSlugMenuItemsPostData, CreateMenuItemMessSlugMenuItemsPostResponses, CreateMenuItemMessSlugMenuItemsPostErrors, GetMenuItemsDisplayMessSlugMenuItemsDisplayGetData, GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponses, GetMenuItemsDisplayMessSlugMenuItemsDisplayGetErrors, DeleteMenuItemMessSlugMenuItemsItemIdDeleteData, DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponses, DeleteMenuItemMessSlugMenuItemsItemIdDeleteErrors, GetMenuItemMessSlugMenuItemsItemIdGetData, GetMenuItemMessSlugMenuItemsItemIdGetResponses, GetMenuItemMessSlugMenuItemsItemIdGetErrors, UpdateMenuItemMessSlugMenuItemsItemIdPutData, UpdateMenuItemMessSlugMenuItemsItemIdPutResponses, UpdateMenuItemMessSlugMenuItemsItemIdPutErrors, GetOrdersMessSlugOrdersIncompleteGetData, GetOrdersMessSlugOrdersIncompleteGetResponses, GetOrdersMessSlugOrdersIncompleteGetErrors, GetOrderMessSlugOrdersOrderIdAdminItemsGetData, GetOrderMessSlugOrdersOrderIdAdminItemsGetResponses, GetOrderMessSlugOrdersOrderIdAdminItemsGetErrors, CreateOrderMessSlugOrdersPostData, CreateOrderMessSlugOrdersPostResponses, CreateOrderMessSlugOrdersPostErrors, GetOrderPopupMessSlugOrdersPopupGetData, GetOrderPopupMessSlugOrdersPopupGetResponses, GetOrderPopupMessSlugOrdersPopupGetErrors, GetOrderItemsMessSlugOrdersOrderIdItemsGetData, GetOrderItemsMessSlugOrdersOrderIdItemsGetResponses, GetOrderItemsMessSlugOrdersOrderIdItemsGetErrors, AddOrderItemMessSlugOrdersOrderIdItemsPostData, AddOrderItemMessSlugOrdersOrderIdItemsPostResponses, AddOrderItemMessSlugOrdersOrderIdItemsPostErrors, DeleteOrderMessSlugOrdersOrderIdDeleteData, DeleteOrderMessSlugOrdersOrderIdDeleteResponses, DeleteOrderMessSlugOrdersOrderIdDeleteErrors, UpdateOrderMessSlugOrdersOrderIdPutData, UpdateOrderMessSlugOrdersOrderIdPutResponses, UpdateOrderMessSlugOrdersOrderIdPutErrors, UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchData, UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponses, UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchErrors, UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchData, UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponses, UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchErrors, MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostData, MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostResponses, MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostErrors, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchData, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponses, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchErrors, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchData, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponses, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchErrors, DeleteOrderItemMessSlugOrdersItemsItemIdDeleteData, DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponses, DeleteOrderItemMessSlugOrdersItemsItemIdDeleteErrors, UpdateOrderItemMessSlugOrdersItemsItemIdPutData, UpdateOrderItemMessSlugOrdersItemsItemIdPutResponses, UpdateOrderItemMessSlugOrdersItemsItemIdPutErrors, CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostData, CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostResponses, CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostErrors, GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetData, GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponses, GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetErrors, UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutData, UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutResponses, UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutErrors, ReadRootGetData, ReadRootGetResponses, HealthCheckHealthGetData, HealthCheckHealthGetResponses, ReadItemItemsItemIdGetData, ReadItemItemsItemIdGetResponses, ReadItemItemsItemIdGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Auth:Database.Login
 */
export const authDatabaseLoginAuthLoginPost = <ThrowOnError extends boolean = false>(options: Options<AuthDatabaseLoginAuthLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AuthDatabaseLoginAuthLoginPostResponses, AuthDatabaseLoginAuthLoginPostErrors, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        responseType: 'json',
        url: '/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options.headers
        }
    });
};

/**
 * Auth:Database.Logout
 */
export const authDatabaseLogoutAuthLogoutPost = <ThrowOnError extends boolean = false>(options?: Options<AuthDatabaseLogoutAuthLogoutPostData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthDatabaseLogoutAuthLogoutPostResponses, AuthDatabaseLogoutAuthLogoutPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/logout',
        ...options
    });
};

/**
 * Register:Register
 */
export const registerRegisterAuthRegisterPost = <ThrowOnError extends boolean = false>(options: Options<RegisterRegisterAuthRegisterPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterRegisterAuthRegisterPostResponses, RegisterRegisterAuthRegisterPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Oauth:Google.Database.Authorize
 */
export const oauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGet = <ThrowOnError extends boolean = false>(options?: Options<OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses, OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/google/authorize',
        ...options
    });
};

/**
 * Oauth:Google.Database.Callback
 * The response varies based on the authentication backend used.
 */
export const oauthGoogleDatabaseCallbackAuthGoogleCallbackGet = <ThrowOnError extends boolean = false>(options?: Options<OauthGoogleDatabaseCallbackAuthGoogleCallbackGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<OauthGoogleDatabaseCallbackAuthGoogleCallbackGetResponses, OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/google/callback',
        ...options
    });
};

/**
 * Reset:Forgot Password
 */
export const resetForgotPasswordAuthForgotPasswordPost = <ThrowOnError extends boolean = false>(options: Options<ResetForgotPasswordAuthForgotPasswordPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetForgotPasswordAuthForgotPasswordPostResponses, ResetForgotPasswordAuthForgotPasswordPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/forgot-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Reset:Reset Password
 */
export const resetResetPasswordAuthResetPasswordPost = <ThrowOnError extends boolean = false>(options: Options<ResetResetPasswordAuthResetPasswordPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetResetPasswordAuthResetPasswordPostResponses, ResetResetPasswordAuthResetPasswordPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Verify:Request-Token
 */
export const verifyRequestTokenAuthRequestVerifyTokenPost = <ThrowOnError extends boolean = false>(options: Options<VerifyRequestTokenAuthRequestVerifyTokenPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<VerifyRequestTokenAuthRequestVerifyTokenPostResponses, VerifyRequestTokenAuthRequestVerifyTokenPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/request-verify-token',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Verify:Verify
 */
export const verifyVerifyAuthVerifyPost = <ThrowOnError extends boolean = false>(options: Options<VerifyVerifyAuthVerifyPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<VerifyVerifyAuthVerifyPostResponses, VerifyVerifyAuthVerifyPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/verify',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Auth:Customer Database.Login
 */
export const authCustomerDatabaseLoginAuthCustomerLoginPost = <ThrowOnError extends boolean = false>(options: Options<AuthCustomerDatabaseLoginAuthCustomerLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AuthCustomerDatabaseLoginAuthCustomerLoginPostResponses, AuthCustomerDatabaseLoginAuthCustomerLoginPostErrors, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        responseType: 'json',
        url: '/auth/customer/login',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options.headers
        }
    });
};

/**
 * Auth:Customer Database.Logout
 */
export const authCustomerDatabaseLogoutAuthCustomerLogoutPost = <ThrowOnError extends boolean = false>(options?: Options<AuthCustomerDatabaseLogoutAuthCustomerLogoutPostData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthCustomerDatabaseLogoutAuthCustomerLogoutPostResponses, AuthCustomerDatabaseLogoutAuthCustomerLogoutPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/customer/logout',
        ...options
    });
};

/**
 * Register:Register
 */
export const registerRegisterAuthCustomerRegisterPost = <ThrowOnError extends boolean = false>(options: Options<RegisterRegisterAuthCustomerRegisterPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterRegisterAuthCustomerRegisterPostResponses, RegisterRegisterAuthCustomerRegisterPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Oauth:Google.Customer Database.Authorize
 */
export const oauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGet = <ThrowOnError extends boolean = false>(options?: Options<OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponses, OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/google/authorize',
        ...options
    });
};

/**
 * Oauth:Google.Customer Database.Callback
 * The response varies based on the authentication backend used.
 */
export const oauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGet = <ThrowOnError extends boolean = false>(options?: Options<OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetResponses, OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/google/callback',
        ...options
    });
};

/**
 * Reset:Forgot Password
 */
export const resetForgotPasswordAuthCustomerForgotPasswordPost = <ThrowOnError extends boolean = false>(options: Options<ResetForgotPasswordAuthCustomerForgotPasswordPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetForgotPasswordAuthCustomerForgotPasswordPostResponses, ResetForgotPasswordAuthCustomerForgotPasswordPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/forgot-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Reset:Reset Password
 */
export const resetResetPasswordAuthCustomerResetPasswordPost = <ThrowOnError extends boolean = false>(options: Options<ResetResetPasswordAuthCustomerResetPasswordPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetResetPasswordAuthCustomerResetPasswordPostResponses, ResetResetPasswordAuthCustomerResetPasswordPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Verify:Request-Token
 */
export const verifyRequestTokenAuthCustomerRequestVerifyTokenPost = <ThrowOnError extends boolean = false>(options: Options<VerifyRequestTokenAuthCustomerRequestVerifyTokenPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<VerifyRequestTokenAuthCustomerRequestVerifyTokenPostResponses, VerifyRequestTokenAuthCustomerRequestVerifyTokenPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/request-verify-token',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Verify:Verify
 */
export const verifyVerifyAuthCustomerVerifyPost = <ThrowOnError extends boolean = false>(options: Options<VerifyVerifyAuthCustomerVerifyPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<VerifyVerifyAuthCustomerVerifyPostResponses, VerifyVerifyAuthCustomerVerifyPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/customer/verify',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Create Customer Session
 */
export const createCustomerSessionAuthMessSlugCustomerSessionPost = <ThrowOnError extends boolean = false>(options: Options<CreateCustomerSessionAuthMessSlugCustomerSessionPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateCustomerSessionAuthMessSlugCustomerSessionPostResponses, CreateCustomerSessionAuthMessSlugCustomerSessionPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/{mess_slug}/customer/session',
        ...options
    });
};

/**
 * Get Me
 */
export const getMeAuthCustomerMeGet = <ThrowOnError extends boolean = false>(options?: Options<GetMeAuthCustomerMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMeAuthCustomerMeGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/customer/me',
        ...options
    });
};

/**
 * Get Customer Session
 */
export const getCustomerSessionAuthMessSlugCustomerSessionSessionIdGet = <ThrowOnError extends boolean = false>(options: Options<GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponses, GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/auth/{mess_slug}/customer/session/{session_id}',
        ...options
    });
};

/**
 * Upload File
 * Upload a single media file
 */
export const uploadFileFilesUploadPost = <ThrowOnError extends boolean = false>(options: Options<UploadFileFilesUploadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadFileFilesUploadPostResponses, UploadFileFilesUploadPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/files/upload/',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Upload Multiple Files
 * Upload multiple media files
 */
export const uploadMultipleFilesFilesUploadMultiplePost = <ThrowOnError extends boolean = false>(options: Options<UploadMultipleFilesFilesUploadMultiplePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadMultipleFilesFilesUploadMultiplePostResponses, UploadMultipleFilesFilesUploadMultiplePostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/files/upload/multiple/',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Delete File
 * Delete uploaded file
 */
export const deleteFileFilesCategoryFilenameDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteFileFilesCategoryFilenameDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteFileFilesCategoryFilenameDeleteResponses, DeleteFileFilesCategoryFilenameDeleteErrors, ThrowOnError>({
        responseType: 'json',
        url: '/files/{category}/{filename}',
        ...options
    });
};

/**
 * Get File
 * Serve uploaded files
 */
export const getFileFilesCategoryFilenameGet = <ThrowOnError extends boolean = false>(options: Options<GetFileFilesCategoryFilenameGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFileFilesCategoryFilenameGetResponses, GetFileFilesCategoryFilenameGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/files/{category}/{filename}',
        ...options
    });
};

/**
 * Get Upload Info
 * Get upload configuration info
 */
export const getUploadInfoFilesInfoGet = <ThrowOnError extends boolean = false>(options?: Options<GetUploadInfoFilesInfoGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUploadInfoFilesInfoGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/files/info',
        ...options
    });
};

/**
 * Users:Current User
 */
export const usersCurrentUserUsersMeGet = <ThrowOnError extends boolean = false>(options?: Options<UsersCurrentUserUsersMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<UsersCurrentUserUsersMeGetResponses, UsersCurrentUserUsersMeGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/me',
        ...options
    });
};

/**
 * Users:Patch Current User
 */
export const usersPatchCurrentUserUsersMePatch = <ThrowOnError extends boolean = false>(options: Options<UsersPatchCurrentUserUsersMePatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UsersPatchCurrentUserUsersMePatchResponses, UsersPatchCurrentUserUsersMePatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/me',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Users:Delete User
 */
export const usersDeleteUserUsersIdDelete = <ThrowOnError extends boolean = false>(options: Options<UsersDeleteUserUsersIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<UsersDeleteUserUsersIdDeleteResponses, UsersDeleteUserUsersIdDeleteErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/{id}',
        ...options
    });
};

/**
 * Users:User
 */
export const usersUserUsersIdGet = <ThrowOnError extends boolean = false>(options: Options<UsersUserUsersIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<UsersUserUsersIdGetResponses, UsersUserUsersIdGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/{id}',
        ...options
    });
};

/**
 * Users:Patch User
 */
export const usersPatchUserUsersIdPatch = <ThrowOnError extends boolean = false>(options: Options<UsersPatchUserUsersIdPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UsersPatchUserUsersIdPatchResponses, UsersPatchUserUsersIdPatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/users/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Messes
 * Get all messes for current user
 */
export const getMessesMessGet = <ThrowOnError extends boolean = false>(options?: Options<GetMessesMessGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMessesMessGetResponses, GetMessesMessGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/',
        ...options
    });
};

/**
 * Create Mess
 * Create new mess
 */
export const createMessMessPost = <ThrowOnError extends boolean = false>(options: Options<CreateMessMessPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateMessMessPostResponses, CreateMessMessPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Mess By Slug
 * Get mess by slug
 */
export const getMessBySlugMessSlugGet = <ThrowOnError extends boolean = false>(options: Options<GetMessBySlugMessSlugGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessBySlugMessSlugGetResponses, GetMessBySlugMessSlugGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{slug}',
        ...options
    });
};

/**
 * Get Mess By Slug Public
 * Get mess by slug public
 */
export const getMessBySlugPublicMessSlugPublicGet = <ThrowOnError extends boolean = false>(options: Options<GetMessBySlugPublicMessSlugPublicGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessBySlugPublicMessSlugPublicGetResponses, GetMessBySlugPublicMessSlugPublicGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/mess/{slug}/public',
        ...options
    });
};

/**
 * Whoami
 */
export const whoamiMessSlugWhoamiGet = <ThrowOnError extends boolean = false>(options: Options<WhoamiMessSlugWhoamiGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<WhoamiMessSlugWhoamiGetResponses, WhoamiMessSlugWhoamiGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{slug}/whoami',
        ...options
    });
};

/**
 * Delete Mess
 * Delete mess
 */
export const deleteMessMessMessIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMessMessMessIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessMessMessIdDeleteResponses, DeleteMessMessMessIdDeleteErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_id}',
        ...options
    });
};

/**
 * Get Mess
 * Get specific mess
 */
export const getMessMessMessIdGet = <ThrowOnError extends boolean = false>(options: Options<GetMessMessMessIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessMessMessIdGetResponses, GetMessMessMessIdGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_id}',
        ...options
    });
};

/**
 * Update Mess
 * Update mess
 */
export const updateMessMessMessIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateMessMessMessIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateMessMessMessIdPutResponses, UpdateMessMessMessIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Customers
 * Get all customers for a specific mess
 */
export const getCustomersMessMessSlugCustomersGet = <ThrowOnError extends boolean = false>(options: Options<GetCustomersMessMessSlugCustomersGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCustomersMessMessSlugCustomersGetResponses, GetCustomersMessMessSlugCustomersGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/customers',
        ...options
    });
};

/**
 * Get Mess Tables
 * Get all tables for a specific mess
 */
export const getMessTablesMessMessSlugTablesGet = <ThrowOnError extends boolean = false>(options: Options<GetMessTablesMessMessSlugTablesGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessTablesMessMessSlugTablesGetResponses, GetMessTablesMessMessSlugTablesGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/',
        ...options
    });
};

/**
 * Create Mess Table
 * Create new table
 */
export const createMessTableMessMessSlugTablesPost = <ThrowOnError extends boolean = false>(options: Options<CreateMessTableMessMessSlugTablesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateMessTableMessMessSlugTablesPostResponses, CreateMessTableMessMessSlugTablesPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Mess Table
 * Delete table
 */
export const deleteMessTableMessMessSlugTablesTableIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMessTableMessMessSlugTablesTableIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessTableMessMessSlugTablesTableIdDeleteResponses, DeleteMessTableMessMessSlugTablesTableIdDeleteErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/{table_id}',
        ...options
    });
};

/**
 * Get Mess Table
 * Get specific table
 */
export const getMessTableMessMessSlugTablesTableIdGet = <ThrowOnError extends boolean = false>(options: Options<GetMessTableMessMessSlugTablesTableIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessTableMessMessSlugTablesTableIdGetResponses, GetMessTableMessMessSlugTablesTableIdGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/{table_id}',
        ...options
    });
};

/**
 * Update Mess Table
 * Update table
 */
export const updateMessTableMessMessSlugTablesTableIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateMessTableMessMessSlugTablesTableIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateMessTableMessMessSlugTablesTableIdPutResponses, UpdateMessTableMessMessSlugTablesTableIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/{table_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Download Table Qr
 * Download QR code for a table (URL: {settings.MENU_URL}/{mess.slug}/{tid})
 */
export const downloadTableQrMessMessSlugTablesTableIdDownloadQrGet = <ThrowOnError extends boolean = false>(options: Options<DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetResponses, DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/mess/{mess_slug}/tables/{table_id}/download-qr',
        ...options
    });
};

/**
 * Get Categories
 */
export const getCategoriesMessSlugMenuCategoriesGet = <ThrowOnError extends boolean = false>(options: Options<GetCategoriesMessSlugMenuCategoriesGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCategoriesMessSlugMenuCategoriesGetResponses, GetCategoriesMessSlugMenuCategoriesGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/categories',
        ...options
    });
};

/**
 * Create Category
 */
export const createCategoryMessSlugMenuCategoriesPost = <ThrowOnError extends boolean = false>(options: Options<CreateCategoryMessSlugMenuCategoriesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateCategoryMessSlugMenuCategoriesPostResponses, CreateCategoryMessSlugMenuCategoriesPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Category
 */
export const deleteCategoryMessSlugMenuCategoriesCategoryIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponses, DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/categories/{category_id}',
        ...options
    });
};

/**
 * Get Category
 */
export const getCategoryMessSlugMenuCategoriesCategoryIdGet = <ThrowOnError extends boolean = false>(options: Options<GetCategoryMessSlugMenuCategoriesCategoryIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCategoryMessSlugMenuCategoriesCategoryIdGetResponses, GetCategoryMessSlugMenuCategoriesCategoryIdGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/categories/{category_id}',
        ...options
    });
};

/**
 * Update Category
 */
export const updateCategoryMessSlugMenuCategoriesCategoryIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateCategoryMessSlugMenuCategoriesCategoryIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponses, UpdateCategoryMessSlugMenuCategoriesCategoryIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/categories/{category_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Menu Items
 */
export const getMenuItemsMessSlugMenuItemsGet = <ThrowOnError extends boolean = false>(options: Options<GetMenuItemsMessSlugMenuItemsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMenuItemsMessSlugMenuItemsGetResponses, GetMenuItemsMessSlugMenuItemsGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items',
        ...options
    });
};

/**
 * Create Menu Item
 */
export const createMenuItemMessSlugMenuItemsPost = <ThrowOnError extends boolean = false>(options: Options<CreateMenuItemMessSlugMenuItemsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateMenuItemMessSlugMenuItemsPostResponses, CreateMenuItemMessSlugMenuItemsPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Menu Items Display
 */
export const getMenuItemsDisplayMessSlugMenuItemsDisplayGet = <ThrowOnError extends boolean = false>(options: Options<GetMenuItemsDisplayMessSlugMenuItemsDisplayGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponses, GetMenuItemsDisplayMessSlugMenuItemsDisplayGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items/display',
        ...options
    });
};

/**
 * Delete Menu Item
 */
export const deleteMenuItemMessSlugMenuItemsItemIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMenuItemMessSlugMenuItemsItemIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponses, DeleteMenuItemMessSlugMenuItemsItemIdDeleteErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items/{item_id}',
        ...options
    });
};

/**
 * Get Menu Item
 */
export const getMenuItemMessSlugMenuItemsItemIdGet = <ThrowOnError extends boolean = false>(options: Options<GetMenuItemMessSlugMenuItemsItemIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMenuItemMessSlugMenuItemsItemIdGetResponses, GetMenuItemMessSlugMenuItemsItemIdGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items/{item_id}',
        ...options
    });
};

/**
 * Update Menu Item
 */
export const updateMenuItemMessSlugMenuItemsItemIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateMenuItemMessSlugMenuItemsItemIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateMenuItemMessSlugMenuItemsItemIdPutResponses, UpdateMenuItemMessSlugMenuItemsItemIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/menu/items/{item_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Orders
 */
export const getOrdersMessSlugOrdersIncompleteGet = <ThrowOnError extends boolean = false>(options: Options<GetOrdersMessSlugOrdersIncompleteGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrdersMessSlugOrdersIncompleteGetResponses, GetOrdersMessSlugOrdersIncompleteGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/incomplete',
        ...options
    });
};

/**
 * Get Order
 */
export const getOrderMessSlugOrdersOrderIdAdminItemsGet = <ThrowOnError extends boolean = false>(options: Options<GetOrderMessSlugOrdersOrderIdAdminItemsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderMessSlugOrdersOrderIdAdminItemsGetResponses, GetOrderMessSlugOrdersOrderIdAdminItemsGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/admin-items',
        ...options
    });
};

/**
 * Create Order
 */
export const createOrderMessSlugOrdersPost = <ThrowOnError extends boolean = false>(options: Options<CreateOrderMessSlugOrdersPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateOrderMessSlugOrdersPostResponses, CreateOrderMessSlugOrdersPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Order Popup
 */
export const getOrderPopupMessSlugOrdersPopupGet = <ThrowOnError extends boolean = false>(options: Options<GetOrderPopupMessSlugOrdersPopupGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderPopupMessSlugOrdersPopupGetResponses, GetOrderPopupMessSlugOrdersPopupGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/popup',
        ...options
    });
};

/**
 * Get Order Items
 */
export const getOrderItemsMessSlugOrdersOrderIdItemsGet = <ThrowOnError extends boolean = false>(options: Options<GetOrderItemsMessSlugOrdersOrderIdItemsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderItemsMessSlugOrdersOrderIdItemsGetResponses, GetOrderItemsMessSlugOrdersOrderIdItemsGetErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/items',
        ...options
    });
};

/**
 * Add Order Item
 */
export const addOrderItemMessSlugOrdersOrderIdItemsPost = <ThrowOnError extends boolean = false>(options: Options<AddOrderItemMessSlugOrdersOrderIdItemsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddOrderItemMessSlugOrdersOrderIdItemsPostResponses, AddOrderItemMessSlugOrdersOrderIdItemsPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Order
 */
export const deleteOrderMessSlugOrdersOrderIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteOrderMessSlugOrdersOrderIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrderMessSlugOrdersOrderIdDeleteResponses, DeleteOrderMessSlugOrdersOrderIdDeleteErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}',
        ...options
    });
};

/**
 * Update Order
 */
export const updateOrderMessSlugOrdersOrderIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderMessSlugOrdersOrderIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateOrderMessSlugOrdersOrderIdPutResponses, UpdateOrderMessSlugOrdersOrderIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Order Status
 */
export const updateOrderStatusMessSlugOrdersOrderIdStatusPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponses, UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/status',
        ...options
    });
};

/**
 * Update Order Status
 */
export const updateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponses, UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/customer-cancel',
        ...options
    });
};

/**
 * Mark Order As Paid
 */
export const markOrderAsPaidMessSlugOrdersOrderIdMarkPaidPost = <ThrowOnError extends boolean = false>(options: Options<MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostResponses, MarkOrderAsPaidMessSlugOrdersOrderIdMarkPaidPostErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/mark-paid',
        ...options
    });
};

/**
 * Cancel Order Item
 */
export const cancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatch = <ThrowOnError extends boolean = false>(options: Options<CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponses, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/items/{item_id}/customer-cancel',
        ...options
    });
};

/**
 * Cancel Order Item
 */
export const cancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatch = <ThrowOnError extends boolean = false>(options: Options<CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponses, CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/{order_id}/items/{item_id}/admin-cancel',
        ...options
    });
};

/**
 * Delete Order Item
 */
export const deleteOrderItemMessSlugOrdersItemsItemIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteOrderItemMessSlugOrdersItemsItemIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponses, DeleteOrderItemMessSlugOrdersItemsItemIdDeleteErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/items/{item_id}',
        ...options
    });
};

/**
 * Update Order Item
 */
export const updateOrderItemMessSlugOrdersItemsItemIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderItemMessSlugOrdersItemsItemIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateOrderItemMessSlugOrdersItemsItemIdPutResponses, UpdateOrderItemMessSlugOrdersItemsItemIdPutErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/{mess_slug}/orders/items/{item_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Create Order Transaction
 */
export const createOrderTransactionMessSlugOrdersOrderIdTransactionsPost = <ThrowOnError extends boolean = false>(options: Options<CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostResponses, CreateOrderTransactionMessSlugOrdersOrderIdTransactionsPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/{mess_slug}/orders/{order_id}/transactions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Order Transaction
 */
export const getOrderTransactionMessSlugOrdersTransactionsTransactionIdGet = <ThrowOnError extends boolean = false>(options: Options<GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponses, GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/{mess_slug}/orders/transactions/{transaction_id}',
        ...options
    });
};

/**
 * Update Order Transaction
 */
export const updateOrderTransactionMessSlugOrdersTransactionsTransactionIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutResponses, UpdateOrderTransactionMessSlugOrdersTransactionsTransactionIdPutErrors, ThrowOnError>({
        responseType: 'json',
        url: '/{mess_slug}/orders/transactions/{transaction_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Read Root
 */
export const readRootGet = <ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadRootGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/',
        ...options
    });
};

/**
 * Health Check
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HealthCheckHealthGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/health',
        ...options
    });
};

/**
 * Read Item
 */
export const readItemItemsItemIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadItemItemsItemIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadItemItemsItemIdGetResponses, ReadItemItemsItemIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/items/{item_id}',
        ...options
    });
};