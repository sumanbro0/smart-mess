// This file is auto-generated by @hey-api/openapi-ts

/**
 * AdminOrderItemResponse
 */
export type AdminOrderItemResponse = {
    /**
     * Items
     */
    items: Array<OrderItemResponse>;
    /**
     * Currency
     */
    currency: string;
    status: OrderStatusEnum;
    /**
     * Total Price
     */
    total_price: number;
    /**
     * Is Paid
     */
    is_paid: boolean;
    transaction?: OrderTransactionResponse | null;
};

/**
 * AdminOrderResponse
 */
export type AdminOrderResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Table Id
     */
    table_id?: string | null;
    /**
     * Created At
     */
    created_at: string;
    status: OrderStatusEnum;
    /**
     * Total Price
     */
    total_price: number;
    /**
     * Has Added Items
     */
    has_added_items: boolean;
    customer?: UserRead | null;
    table?: MessTableRead | null;
    transaction?: OrderTransactionBase | null;
};

/**
 * AnalyticsOverviewResponse
 */
export type AnalyticsOverviewResponse = {
    /**
     * Revenue
     */
    revenue: number;
    /**
     * Orders
     */
    orders: number;
    /**
     * Customers
     */
    customers: number;
    /**
     * Items
     */
    items: number;
};

/**
 * AnalyticsResponse
 */
export type AnalyticsResponse = {
    overview: AnalyticsOverviewResponse;
    /**
     * Top Menu Items
     */
    top_menu_items: Array<AnalyticsTopMenuItemsResponse>;
    /**
     * Top Customers
     */
    top_customers: Array<AnalyticsTopCustomersResponse>;
    /**
     * Currency
     */
    currency: string;
};

/**
 * AnalyticsTopCustomersResponse
 */
export type AnalyticsTopCustomersResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Image
     */
    image: string;
    /**
     * Total Orders
     */
    total_orders: number;
    /**
     * Total Spent
     */
    total_spent: number;
    /**
     * Last Order Date
     */
    last_order_date: string;
};

/**
 * AnalyticsTopMenuItemsResponse
 */
export type AnalyticsTopMenuItemsResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Image
     */
    image: string;
    /**
     * Category Name
     */
    category_name: string;
    /**
     * Price
     */
    price: number;
    /**
     * Sold Count
     */
    sold_count: number;
    spicy_level: SpicinessEnum;
    /**
     * Is Veg
     */
    is_veg: boolean;
    /**
     * In Stock
     */
    in_stock: boolean;
};

/**
 * BearerResponse
 */
export type BearerResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * Body_auth_customer_database_login_auth_customer_login_post
 */
export type BodyAuthCustomerDatabaseLoginAuthCustomerLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_auth_database_login_auth_login_post
 */
export type BodyAuthDatabaseLoginAuthLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_customer_login_auth_customer_login_post
 */
export type BodyCustomerLoginAuthCustomerLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_reset_forgot_password_auth_customer_forgot_password_post
 */
export type BodyResetForgotPasswordAuthCustomerForgotPasswordPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_reset_forgot_password_auth_forgot_password_post
 */
export type BodyResetForgotPasswordAuthForgotPasswordPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_reset_reset_password_auth_customer_reset_password_post
 */
export type BodyResetResetPasswordAuthCustomerResetPasswordPost = {
    /**
     * Token
     */
    token: string;
    /**
     * Password
     */
    password: string;
};

/**
 * Body_reset_reset_password_auth_reset_password_post
 */
export type BodyResetResetPasswordAuthResetPasswordPost = {
    /**
     * Token
     */
    token: string;
    /**
     * Password
     */
    password: string;
};

/**
 * Body_upload_file_files_upload__post
 */
export type BodyUploadFileFilesUploadPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * Body_upload_multiple_files_files_upload_multiple__post
 */
export type BodyUploadMultipleFilesFilesUploadMultiplePost = {
    /**
     * Files
     */
    files: Array<Blob | File>;
};

/**
 * Body_verify_request_token_auth_customer_request_verify_token_post
 */
export type BodyVerifyRequestTokenAuthCustomerRequestVerifyTokenPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_verify_request_token_auth_request_verify_token_post
 */
export type BodyVerifyRequestTokenAuthRequestVerifyTokenPost = {
    /**
     * Email
     */
    email: string;
};

/**
 * Body_verify_verify_auth_customer_verify_post
 */
export type BodyVerifyVerifyAuthCustomerVerifyPost = {
    /**
     * Token
     */
    token: string;
};

/**
 * Body_verify_verify_auth_verify_post
 */
export type BodyVerifyVerifyAuthVerifyPost = {
    /**
     * Token
     */
    token: string;
};

/**
 * CategoryResponse
 */
export type CategoryResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Mess Id
     */
    mess_id?: string | null;
    /**
     * Id
     */
    id: string;
};

/**
 * CustomerCreate
 */
export type CustomerCreate = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Is Superuser
     */
    is_superuser?: boolean | null;
    /**
     * Is Verified
     */
    is_verified?: boolean | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * CustomerOrderItemResponse
 */
export type CustomerOrderItemResponse = {
    /**
     * Items
     */
    items: Array<OrderItemResponse>;
    /**
     * Currency
     */
    currency: string;
    status: OrderStatusEnum;
    /**
     * Total Price
     */
    total_price: number;
    /**
     * Is Paid
     */
    is_paid: boolean;
    transaction?: OrderTransactionResponse | null;
};

/**
 * CustomerRead
 */
export type CustomerRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email: string;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Is Superuser
     */
    is_superuser?: boolean;
    /**
     * Is Verified
     */
    is_verified?: boolean;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * CustomerSessionTokenRead
 */
export type CustomerSessionTokenRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Token
     */
    token: string;
};

/**
 * ErrorModel
 */
export type ErrorModel = {
    /**
     * Detail
     */
    detail: string | {
        [key: string]: string;
    };
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * MenuItemCategoryCreate
 */
export type MenuItemCategoryCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Mess Id
     */
    mess_id?: string | null;
};

/**
 * MenuItemCategoryDisplay
 */
export type MenuItemCategoryDisplay = {
    /**
     * Name
     */
    name: string;
};

/**
 * MenuItemCategoryResponse
 */
export type MenuItemCategoryResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Id
     */
    id: string;
};

/**
 * MenuItemCategoryUpdate
 */
export type MenuItemCategoryUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Slug
     */
    slug?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Mess Id
     */
    mess_id?: string | null;
};

/**
 * MenuItemCreate
 */
export type MenuItemCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price: number;
    /**
     * In Stock
     */
    in_stock?: boolean;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Primary Image
     */
    primary_image?: string | null;
    /**
     * Is Veg
     */
    is_veg?: boolean;
    /**
     * Mess Id
     */
    mess_id?: string | null;
    /**
     * Category Id
     */
    category_id: string;
    /**
     * Images
     * List of image file data
     */
    images?: Array<string> | null;
};

/**
 * MenuItemCreateResponse
 */
export type MenuItemCreateResponse = {
    /**
     * Id
     */
    id: string;
};

/**
 * MenuItemDisplayResponse
 */
export type MenuItemDisplayResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price: number;
    /**
     * In Stock
     */
    in_stock?: boolean;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Primary Image
     */
    primary_image?: string | null;
    /**
     * Is Veg
     */
    is_veg?: boolean;
    /**
     * Id
     */
    id: string;
    category?: MenuItemCategoryDisplay | null;
};

/**
 * MenuItemResponse
 */
export type MenuItemResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price: number;
    /**
     * In Stock
     */
    in_stock?: boolean;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Primary Image
     */
    primary_image?: string | null;
    /**
     * Is Veg
     */
    is_veg?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Category Id
     */
    category_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * MenuItemUpdate
 */
export type MenuItemUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Price
     */
    price?: number | null;
    /**
     * In Stock
     */
    in_stock?: boolean | null;
    /**
     * Category Id
     */
    category_id?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Calories
     */
    calories?: number | null;
    spiciness?: SpicinessEnum | null;
    /**
     * Is Veg
     */
    is_veg?: boolean | null;
    /**
     * Primary Image
     */
    primary_image?: string | null;
    /**
     * Images
     * List of image file data
     */
    images?: Array<string> | null;
};

/**
 * MenuResponse
 */
export type MenuResponse = {
    /**
     * Currency
     */
    currency: string;
    /**
     * Items
     */
    items: Array<MenuItemResponse>;
};

/**
 * MessCreate
 */
export type MessCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Owner Id
     */
    owner_id?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Currency
     */
    currency?: string | null;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * MessRead
 */
export type MessRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Slug
     */
    slug: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Owner Id
     */
    owner_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Currency
     */
    currency?: string;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * MessTableCreate
 */
export type MessTableCreate = {
    /**
     * Table Name
     */
    table_name: string;
    /**
     * Capacity
     */
    capacity: number;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * MessTableRead
 */
export type MessTableRead = {
    /**
     * Id
     */
    id?: string | null;
    /**
     * Table Name
     */
    table_name: string;
    /**
     * Capacity
     */
    capacity: number;
    /**
     * Mess Id
     */
    mess_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Is Active
     */
    is_active?: boolean;
};

/**
 * MessTableUpdate
 */
export type MessTableUpdate = {
    /**
     * Table Name
     */
    table_name?: string | null;
    /**
     * Capacity
     */
    capacity?: number | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * MessUpdate
 */
export type MessUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Slug
     */
    slug?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Currency
     */
    currency?: string | null;
    /**
     * Logo
     */
    logo?: string | null;
};

/**
 * MyOrderResponse
 */
export type MyOrderResponse = {
    /**
     * Orders
     */
    orders: Array<AdminOrderResponse>;
    /**
     * Currency
     */
    currency: string;
};

/**
 * OAuth2AuthorizeResponse
 */
export type OAuth2AuthorizeResponse = {
    /**
     * Authorization Url
     */
    authorization_url: string;
};

/**
 * OrderCreate
 */
export type OrderCreate = {
    status?: OrderStatusEnum;
    /**
     * Table Id
     */
    table_id: string;
    /**
     * Items
     */
    items: Array<OrderItemCreate>;
};

/**
 * OrderCreateResponse
 */
export type OrderCreateResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Table Id
     */
    table_id: string;
    /**
     * Mess Id
     */
    mess_id: string;
    status: OrderStatusEnum;
};

/**
 * OrderItemCreate
 */
export type OrderItemCreate = {
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Total Price
     */
    total_price?: number | null;
    /**
     * Is Cancelled
     */
    is_cancelled?: boolean;
    /**
     * Menu Item Id
     */
    menu_item_id: string;
};

/**
 * OrderItemResponse
 */
export type OrderItemResponse = {
    /**
     * Quantity
     */
    quantity: number;
    /**
     * Total Price
     */
    total_price: number | null;
    /**
     * Is Cancelled
     */
    is_cancelled?: boolean;
    /**
     * Id
     */
    id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Menu Item Id
     */
    menu_item_id: string;
    menu_item?: MenuItemResponse | null;
};

/**
 * OrderItemUpdate
 */
export type OrderItemUpdate = {
    /**
     * Quantity
     */
    quantity?: number | null;
};

/**
 * OrderPopupResponse
 */
export type OrderPopupResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Total Price
     */
    total_price: number;
    /**
     * Currency
     */
    currency: string;
};

/**
 * OrderStatusEnum
 */
export type OrderStatusEnum = 'pending' | 'received' | 'preparing' | 'ready' | 'served' | 'completed' | 'cancelled';

/**
 * OrderTransactionBase
 */
export type OrderTransactionBase = {
    /**
     * Transaction Id
     */
    transaction_id: string;
    /**
     * Amount
     */
    amount: number;
    status?: OrderTransactionStatusEnum;
    payment_method: PaymentMethodEnum;
};

/**
 * OrderTransactionResponse
 */
export type OrderTransactionResponse = {
    /**
     * Transaction Id
     */
    transaction_id: string;
    /**
     * Amount
     */
    amount: number;
    status?: OrderTransactionStatusEnum;
    payment_method: PaymentMethodEnum;
    /**
     * Id
     */
    id: string;
    /**
     * Order Id
     */
    order_id: string;
    /**
     * Payment Url
     */
    payment_url: string;
    /**
     * Payment Id
     */
    payment_id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * OrderTransactionStatusEnum
 */
export type OrderTransactionStatusEnum = 'pending' | 'success' | 'failed';

/**
 * OrderUpdate
 */
export type OrderUpdate = {
    status?: OrderStatusEnum | null;
    /**
     * Table Id
     */
    table_id?: string | null;
    /**
     * Is Cancelled
     */
    is_cancelled?: boolean | null;
};

/**
 * PaymentMethodEnum
 */
export type PaymentMethodEnum = 'cash' | 'esewa' | 'khalti' | 'stripe';

/**
 * ResponseMessage
 */
export type ResponseMessage = {
    /**
     * Message
     */
    message: string;
    /**
     * Status Code
     */
    status_code: number;
};

/**
 * RoleRead
 */
export type RoleRead = {
    /**
     * Id
     */
    id: string;
    role: UserRole;
};

/**
 * SpicinessEnum
 */
export type SpicinessEnum = 'low' | 'medium' | 'high';

/**
 * UploadMultipleResponse
 */
export type UploadMultipleResponse = {
    /**
     * Files
     */
    files: Array<UploadResponse>;
};

/**
 * UploadResponse
 */
export type UploadResponse = {
    /**
     * Filename
     */
    filename: string;
    /**
     * Stored Filename
     */
    stored_filename: string;
    /**
     * Size
     */
    size: number;
    /**
     * Category
     */
    category: string;
    /**
     * Mime Type
     */
    mime_type: string;
    /**
     * Url
     */
    url: string;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Is Superuser
     */
    is_superuser?: boolean | null;
    /**
     * Is Verified
     */
    is_verified?: boolean | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * UserRead
 */
export type UserRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email: string;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Is Superuser
     */
    is_superuser?: boolean;
    /**
     * Is Verified
     */
    is_verified?: boolean;
    /**
     * Name
     */
    name: string;
    /**
     * Image
     */
    image?: string | null;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * UserRole
 */
export type UserRole = 'owner' | 'staff' | 'customer' | 'admin';

/**
 * UserUpdate
 */
export type UserUpdate = {
    /**
     * Password
     */
    password?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Is Superuser
     */
    is_superuser?: boolean | null;
    /**
     * Is Verified
     */
    is_verified?: boolean | null;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Image
     */
    image?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type AuthDatabaseLoginAuthLoginPostData = {
    body: BodyAuthDatabaseLoginAuthLoginPost;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type AuthDatabaseLoginAuthLoginPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthDatabaseLoginAuthLoginPostError = AuthDatabaseLoginAuthLoginPostErrors[keyof AuthDatabaseLoginAuthLoginPostErrors];

export type AuthDatabaseLoginAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: BearerResponse;
};

export type AuthDatabaseLoginAuthLoginPostResponse = AuthDatabaseLoginAuthLoginPostResponses[keyof AuthDatabaseLoginAuthLoginPostResponses];

export type AuthDatabaseLogoutAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type AuthDatabaseLogoutAuthLogoutPostErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
};

export type AuthDatabaseLogoutAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterRegisterAuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type RegisterRegisterAuthRegisterPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterRegisterAuthRegisterPostError = RegisterRegisterAuthRegisterPostErrors[keyof RegisterRegisterAuthRegisterPostErrors];

export type RegisterRegisterAuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: UserRead;
};

export type RegisterRegisterAuthRegisterPostResponse = RegisterRegisterAuthRegisterPostResponses[keyof RegisterRegisterAuthRegisterPostResponses];

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Scopes
         */
        scopes?: Array<string>;
    };
    url: '/auth/google/authorize';
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetError = OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors[keyof OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetErrors];

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses = {
    /**
     * Successful Response
     */
    200: OAuth2AuthorizeResponse;
};

export type OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponse = OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses[keyof OauthGoogleDatabaseAuthorizeAuthGoogleAuthorizeGetResponses];

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Code
         */
        code?: string | null;
        /**
         * Code Verifier
         */
        code_verifier?: string | null;
        /**
         * State
         */
        state?: string | null;
        /**
         * Error
         */
        error?: string | null;
    };
    url: '/auth/google/callback';
};

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetError = OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors[keyof OauthGoogleDatabaseCallbackAuthGoogleCallbackGetErrors];

export type OauthGoogleDatabaseCallbackAuthGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResetForgotPasswordAuthForgotPasswordPostData = {
    body: BodyResetForgotPasswordAuthForgotPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/forgot-password';
};

export type ResetForgotPasswordAuthForgotPasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetForgotPasswordAuthForgotPasswordPostError = ResetForgotPasswordAuthForgotPasswordPostErrors[keyof ResetForgotPasswordAuthForgotPasswordPostErrors];

export type ResetForgotPasswordAuthForgotPasswordPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type ResetResetPasswordAuthResetPasswordPostData = {
    body: BodyResetResetPasswordAuthResetPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/reset-password';
};

export type ResetResetPasswordAuthResetPasswordPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetResetPasswordAuthResetPasswordPostError = ResetResetPasswordAuthResetPasswordPostErrors[keyof ResetResetPasswordAuthResetPasswordPostErrors];

export type ResetResetPasswordAuthResetPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostData = {
    body: BodyVerifyRequestTokenAuthRequestVerifyTokenPost;
    path?: never;
    query?: never;
    url: '/auth/request-verify-token';
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyRequestTokenAuthRequestVerifyTokenPostError = VerifyRequestTokenAuthRequestVerifyTokenPostErrors[keyof VerifyRequestTokenAuthRequestVerifyTokenPostErrors];

export type VerifyRequestTokenAuthRequestVerifyTokenPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type VerifyVerifyAuthVerifyPostData = {
    body: BodyVerifyVerifyAuthVerifyPost;
    path?: never;
    query?: never;
    url: '/auth/verify';
};

export type VerifyVerifyAuthVerifyPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyVerifyAuthVerifyPostError = VerifyVerifyAuthVerifyPostErrors[keyof VerifyVerifyAuthVerifyPostErrors];

export type VerifyVerifyAuthVerifyPostResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type VerifyVerifyAuthVerifyPostResponse = VerifyVerifyAuthVerifyPostResponses[keyof VerifyVerifyAuthVerifyPostResponses];

export type AuthCustomerDatabaseLoginAuthCustomerLoginPostData = {
    body: BodyAuthCustomerDatabaseLoginAuthCustomerLoginPost;
    path?: never;
    query?: never;
    url: '/auth/customer/login';
};

export type AuthCustomerDatabaseLoginAuthCustomerLoginPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthCustomerDatabaseLoginAuthCustomerLoginPostError = AuthCustomerDatabaseLoginAuthCustomerLoginPostErrors[keyof AuthCustomerDatabaseLoginAuthCustomerLoginPostErrors];

export type AuthCustomerDatabaseLoginAuthCustomerLoginPostResponses = {
    /**
     * Successful Response
     */
    200: BearerResponse;
};

export type AuthCustomerDatabaseLoginAuthCustomerLoginPostResponse = AuthCustomerDatabaseLoginAuthCustomerLoginPostResponses[keyof AuthCustomerDatabaseLoginAuthCustomerLoginPostResponses];

export type AuthCustomerDatabaseLogoutAuthCustomerLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/customer/logout';
};

export type AuthCustomerDatabaseLogoutAuthCustomerLogoutPostErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
};

export type AuthCustomerDatabaseLogoutAuthCustomerLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterRegisterAuthCustomerRegisterPostData = {
    body: CustomerCreate;
    path?: never;
    query?: never;
    url: '/auth/customer/register';
};

export type RegisterRegisterAuthCustomerRegisterPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterRegisterAuthCustomerRegisterPostError = RegisterRegisterAuthCustomerRegisterPostErrors[keyof RegisterRegisterAuthCustomerRegisterPostErrors];

export type RegisterRegisterAuthCustomerRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: CustomerRead;
};

export type RegisterRegisterAuthCustomerRegisterPostResponse = RegisterRegisterAuthCustomerRegisterPostResponses[keyof RegisterRegisterAuthCustomerRegisterPostResponses];

export type OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Scopes
         */
        scopes?: Array<string>;
    };
    url: '/auth/customer/google/authorize';
};

export type OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetError = OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetErrors[keyof OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetErrors];

export type OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponses = {
    /**
     * Successful Response
     */
    200: OAuth2AuthorizeResponse;
};

export type OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponse = OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponses[keyof OauthGoogleCustomerDatabaseAuthorizeAuthCustomerGoogleAuthorizeGetResponses];

export type OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Code
         */
        code?: string | null;
        /**
         * Code Verifier
         */
        code_verifier?: string | null;
        /**
         * State
         */
        state?: string | null;
        /**
         * Error
         */
        error?: string | null;
    };
    url: '/auth/customer/google/callback';
};

export type OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetError = OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetErrors[keyof OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetErrors];

export type OauthGoogleCustomerDatabaseCallbackAuthCustomerGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResetForgotPasswordAuthCustomerForgotPasswordPostData = {
    body: BodyResetForgotPasswordAuthCustomerForgotPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/customer/forgot-password';
};

export type ResetForgotPasswordAuthCustomerForgotPasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetForgotPasswordAuthCustomerForgotPasswordPostError = ResetForgotPasswordAuthCustomerForgotPasswordPostErrors[keyof ResetForgotPasswordAuthCustomerForgotPasswordPostErrors];

export type ResetForgotPasswordAuthCustomerForgotPasswordPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type ResetResetPasswordAuthCustomerResetPasswordPostData = {
    body: BodyResetResetPasswordAuthCustomerResetPasswordPost;
    path?: never;
    query?: never;
    url: '/auth/customer/reset-password';
};

export type ResetResetPasswordAuthCustomerResetPasswordPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetResetPasswordAuthCustomerResetPasswordPostError = ResetResetPasswordAuthCustomerResetPasswordPostErrors[keyof ResetResetPasswordAuthCustomerResetPasswordPostErrors];

export type ResetResetPasswordAuthCustomerResetPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyRequestTokenAuthCustomerRequestVerifyTokenPostData = {
    body: BodyVerifyRequestTokenAuthCustomerRequestVerifyTokenPost;
    path?: never;
    query?: never;
    url: '/auth/customer/request-verify-token';
};

export type VerifyRequestTokenAuthCustomerRequestVerifyTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyRequestTokenAuthCustomerRequestVerifyTokenPostError = VerifyRequestTokenAuthCustomerRequestVerifyTokenPostErrors[keyof VerifyRequestTokenAuthCustomerRequestVerifyTokenPostErrors];

export type VerifyRequestTokenAuthCustomerRequestVerifyTokenPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type VerifyVerifyAuthCustomerVerifyPostData = {
    body: BodyVerifyVerifyAuthCustomerVerifyPost;
    path?: never;
    query?: never;
    url: '/auth/customer/verify';
};

export type VerifyVerifyAuthCustomerVerifyPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyVerifyAuthCustomerVerifyPostError = VerifyVerifyAuthCustomerVerifyPostErrors[keyof VerifyVerifyAuthCustomerVerifyPostErrors];

export type VerifyVerifyAuthCustomerVerifyPostResponses = {
    /**
     * Successful Response
     */
    200: CustomerRead;
};

export type VerifyVerifyAuthCustomerVerifyPostResponse = VerifyVerifyAuthCustomerVerifyPostResponses[keyof VerifyVerifyAuthCustomerVerifyPostResponses];

export type CreateCustomerSessionAuthMessSlugCustomerSessionPostData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query: {
        /**
         * Token
         */
        token: string;
    };
    url: '/auth/{mess_slug}/customer/session';
};

export type CreateCustomerSessionAuthMessSlugCustomerSessionPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCustomerSessionAuthMessSlugCustomerSessionPostError = CreateCustomerSessionAuthMessSlugCustomerSessionPostErrors[keyof CreateCustomerSessionAuthMessSlugCustomerSessionPostErrors];

export type CreateCustomerSessionAuthMessSlugCustomerSessionPostResponses = {
    /**
     * Response Create Customer Session Auth  Mess Slug  Customer Session Post
     * Successful Response
     */
    201: string;
};

export type CreateCustomerSessionAuthMessSlugCustomerSessionPostResponse = CreateCustomerSessionAuthMessSlugCustomerSessionPostResponses[keyof CreateCustomerSessionAuthMessSlugCustomerSessionPostResponses];

export type GetMeAuthCustomerMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/customer/me';
};

export type GetMeAuthCustomerMeGetResponses = {
    /**
     * Successful Response
     */
    200: CustomerRead;
};

export type GetMeAuthCustomerMeGetResponse = GetMeAuthCustomerMeGetResponses[keyof GetMeAuthCustomerMeGetResponses];

export type GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
        /**
         * Session Id
         */
        session_id: string;
    };
    query?: never;
    url: '/auth/{mess_slug}/customer/session/{session_id}';
};

export type GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetError = GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetErrors[keyof GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetErrors];

export type GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponses = {
    /**
     * Successful Response
     */
    200: CustomerSessionTokenRead;
};

export type GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponse = GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponses[keyof GetCustomerSessionAuthMessSlugCustomerSessionSessionIdGetResponses];

export type UploadFileFilesUploadPostData = {
    body: BodyUploadFileFilesUploadPost;
    path?: never;
    query?: never;
    url: '/files/upload/';
};

export type UploadFileFilesUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadFileFilesUploadPostError = UploadFileFilesUploadPostErrors[keyof UploadFileFilesUploadPostErrors];

export type UploadFileFilesUploadPostResponses = {
    /**
     * Successful Response
     */
    200: UploadResponse;
};

export type UploadFileFilesUploadPostResponse = UploadFileFilesUploadPostResponses[keyof UploadFileFilesUploadPostResponses];

export type UploadMultipleFilesFilesUploadMultiplePostData = {
    body: BodyUploadMultipleFilesFilesUploadMultiplePost;
    path?: never;
    query?: never;
    url: '/files/upload/multiple/';
};

export type UploadMultipleFilesFilesUploadMultiplePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadMultipleFilesFilesUploadMultiplePostError = UploadMultipleFilesFilesUploadMultiplePostErrors[keyof UploadMultipleFilesFilesUploadMultiplePostErrors];

export type UploadMultipleFilesFilesUploadMultiplePostResponses = {
    /**
     * Successful Response
     */
    200: UploadMultipleResponse;
};

export type UploadMultipleFilesFilesUploadMultiplePostResponse = UploadMultipleFilesFilesUploadMultiplePostResponses[keyof UploadMultipleFilesFilesUploadMultiplePostResponses];

export type DeleteFileFilesCategoryFilenameDeleteData = {
    body?: never;
    path: {
        /**
         * Category
         */
        category: string;
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{category}/{filename}';
};

export type DeleteFileFilesCategoryFilenameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileFilesCategoryFilenameDeleteError = DeleteFileFilesCategoryFilenameDeleteErrors[keyof DeleteFileFilesCategoryFilenameDeleteErrors];

export type DeleteFileFilesCategoryFilenameDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetFileFilesCategoryFilenameGetData = {
    body?: never;
    path: {
        /**
         * Category
         */
        category: string;
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{category}/{filename}';
};

export type GetFileFilesCategoryFilenameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFileFilesCategoryFilenameGetError = GetFileFilesCategoryFilenameGetErrors[keyof GetFileFilesCategoryFilenameGetErrors];

export type GetFileFilesCategoryFilenameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUploadInfoFilesInfoGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/files/info';
};

export type GetUploadInfoFilesInfoGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UsersCurrentUserUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type UsersCurrentUserUsersMeGetErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
};

export type UsersCurrentUserUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersCurrentUserUsersMeGetResponse = UsersCurrentUserUsersMeGetResponses[keyof UsersCurrentUserUsersMeGetResponses];

export type UsersPatchCurrentUserUsersMePatchData = {
    body: UserUpdate;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type UsersPatchCurrentUserUsersMePatchErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersPatchCurrentUserUsersMePatchError = UsersPatchCurrentUserUsersMePatchErrors[keyof UsersPatchCurrentUserUsersMePatchErrors];

export type UsersPatchCurrentUserUsersMePatchResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersPatchCurrentUserUsersMePatchResponse = UsersPatchCurrentUserUsersMePatchResponses[keyof UsersPatchCurrentUserUsersMePatchResponses];

export type UsersDeleteUserUsersIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersDeleteUserUsersIdDeleteErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersDeleteUserUsersIdDeleteError = UsersDeleteUserUsersIdDeleteErrors[keyof UsersDeleteUserUsersIdDeleteErrors];

export type UsersDeleteUserUsersIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type UsersDeleteUserUsersIdDeleteResponse = UsersDeleteUserUsersIdDeleteResponses[keyof UsersDeleteUserUsersIdDeleteResponses];

export type UsersUserUsersIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersUserUsersIdGetErrors = {
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersUserUsersIdGetError = UsersUserUsersIdGetErrors[keyof UsersUserUsersIdGetErrors];

export type UsersUserUsersIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersUserUsersIdGetResponse = UsersUserUsersIdGetResponses[keyof UsersUserUsersIdGetResponses];

export type UsersPatchUserUsersIdPatchData = {
    body: UserUpdate;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type UsersPatchUserUsersIdPatchErrors = {
    /**
     * Bad Request
     */
    400: ErrorModel;
    /**
     * Missing token or inactive user.
     */
    401: unknown;
    /**
     * Not a superuser.
     */
    403: unknown;
    /**
     * The user does not exist.
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UsersPatchUserUsersIdPatchError = UsersPatchUserUsersIdPatchErrors[keyof UsersPatchUserUsersIdPatchErrors];

export type UsersPatchUserUsersIdPatchResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UsersPatchUserUsersIdPatchResponse = UsersPatchUserUsersIdPatchResponses[keyof UsersPatchUserUsersIdPatchResponses];

export type GetMessesMessGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/mess/';
};

export type GetMessesMessGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessesMessGetError = GetMessesMessGetErrors[keyof GetMessesMessGetErrors];

export type GetMessesMessGetResponses = {
    /**
     * Response Get Messes Mess  Get
     * Successful Response
     */
    200: Array<MessRead>;
};

export type GetMessesMessGetResponse = GetMessesMessGetResponses[keyof GetMessesMessGetResponses];

export type CreateMessMessPostData = {
    body: MessCreate;
    path?: never;
    query?: never;
    url: '/mess/';
};

export type CreateMessMessPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessMessPostError = CreateMessMessPostErrors[keyof CreateMessMessPostErrors];

export type CreateMessMessPostResponses = {
    /**
     * Successful Response
     */
    201: MessRead;
};

export type CreateMessMessPostResponse = CreateMessMessPostResponses[keyof CreateMessMessPostResponses];

export type GetMessBySlugMessSlugGetData = {
    body?: never;
    path: {
        /**
         * Slug
         */
        slug: string;
    };
    query?: never;
    url: '/mess/{slug}';
};

export type GetMessBySlugMessSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessBySlugMessSlugGetError = GetMessBySlugMessSlugGetErrors[keyof GetMessBySlugMessSlugGetErrors];

export type GetMessBySlugMessSlugGetResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type GetMessBySlugMessSlugGetResponse = GetMessBySlugMessSlugGetResponses[keyof GetMessBySlugMessSlugGetResponses];

export type GetMessBySlugPublicMessSlugPublicGetData = {
    body?: never;
    path: {
        /**
         * Slug
         */
        slug: string;
    };
    query?: never;
    url: '/mess/{slug}/public';
};

export type GetMessBySlugPublicMessSlugPublicGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessBySlugPublicMessSlugPublicGetError = GetMessBySlugPublicMessSlugPublicGetErrors[keyof GetMessBySlugPublicMessSlugPublicGetErrors];

export type GetMessBySlugPublicMessSlugPublicGetResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type GetMessBySlugPublicMessSlugPublicGetResponse = GetMessBySlugPublicMessSlugPublicGetResponses[keyof GetMessBySlugPublicMessSlugPublicGetResponses];

export type WhoamiMessSlugWhoamiGetData = {
    body?: never;
    path: {
        /**
         * Slug
         */
        slug: string;
    };
    query?: never;
    url: '/mess/{slug}/whoami';
};

export type WhoamiMessSlugWhoamiGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WhoamiMessSlugWhoamiGetError = WhoamiMessSlugWhoamiGetErrors[keyof WhoamiMessSlugWhoamiGetErrors];

export type WhoamiMessSlugWhoamiGetResponses = {
    /**
     * Successful Response
     */
    200: RoleRead;
};

export type WhoamiMessSlugWhoamiGetResponse = WhoamiMessSlugWhoamiGetResponses[keyof WhoamiMessSlugWhoamiGetResponses];

export type DeleteMessMessMessIdDeleteData = {
    body?: never;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type DeleteMessMessMessIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMessMessMessIdDeleteError = DeleteMessMessMessIdDeleteErrors[keyof DeleteMessMessMessIdDeleteErrors];

export type DeleteMessMessMessIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMessMessMessIdGetData = {
    body?: never;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type GetMessMessMessIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessMessMessIdGetError = GetMessMessMessIdGetErrors[keyof GetMessMessMessIdGetErrors];

export type GetMessMessMessIdGetResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type GetMessMessMessIdGetResponse = GetMessMessMessIdGetResponses[keyof GetMessMessMessIdGetResponses];

export type UpdateMessMessMessIdPutData = {
    body: MessUpdate;
    path: {
        /**
         * Mess Id
         */
        mess_id: string;
    };
    query?: never;
    url: '/mess/{mess_id}';
};

export type UpdateMessMessMessIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMessMessMessIdPutError = UpdateMessMessMessIdPutErrors[keyof UpdateMessMessMessIdPutErrors];

export type UpdateMessMessMessIdPutResponses = {
    /**
     * Successful Response
     */
    200: MessRead;
};

export type UpdateMessMessMessIdPutResponse = UpdateMessMessMessIdPutResponses[keyof UpdateMessMessMessIdPutResponses];

export type GetCustomersMessMessSlugCustomersGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/customers';
};

export type GetCustomersMessMessSlugCustomersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCustomersMessMessSlugCustomersGetError = GetCustomersMessMessSlugCustomersGetErrors[keyof GetCustomersMessMessSlugCustomersGetErrors];

export type GetCustomersMessMessSlugCustomersGetResponses = {
    /**
     * Response Get Customers Mess  Mess Slug  Customers Get
     * Successful Response
     */
    200: Array<CustomerRead>;
};

export type GetCustomersMessMessSlugCustomersGetResponse = GetCustomersMessMessSlugCustomersGetResponses[keyof GetCustomersMessMessSlugCustomersGetResponses];

export type GetMessTablesMessMessSlugTablesGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/mess/{mess_slug}/tables/';
};

export type GetMessTablesMessMessSlugTablesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessTablesMessMessSlugTablesGetError = GetMessTablesMessMessSlugTablesGetErrors[keyof GetMessTablesMessMessSlugTablesGetErrors];

export type GetMessTablesMessMessSlugTablesGetResponses = {
    /**
     * Response Get Mess Tables Mess  Mess Slug  Tables  Get
     * Successful Response
     */
    200: Array<MessTableRead>;
};

export type GetMessTablesMessMessSlugTablesGetResponse = GetMessTablesMessMessSlugTablesGetResponses[keyof GetMessTablesMessMessSlugTablesGetResponses];

export type CreateMessTableMessMessSlugTablesPostData = {
    body: MessTableCreate;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/tables/';
};

export type CreateMessTableMessMessSlugTablesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessTableMessMessSlugTablesPostError = CreateMessTableMessMessSlugTablesPostErrors[keyof CreateMessTableMessMessSlugTablesPostErrors];

export type CreateMessTableMessMessSlugTablesPostResponses = {
    /**
     * Successful Response
     */
    201: MessTableRead;
};

export type CreateMessTableMessMessSlugTablesPostResponse = CreateMessTableMessMessSlugTablesPostResponses[keyof CreateMessTableMessMessSlugTablesPostResponses];

export type DeleteMessTableMessMessSlugTablesTableIdDeleteData = {
    body?: never;
    path: {
        /**
         * Table Id
         */
        table_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/tables/{table_id}';
};

export type DeleteMessTableMessMessSlugTablesTableIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMessTableMessMessSlugTablesTableIdDeleteError = DeleteMessTableMessMessSlugTablesTableIdDeleteErrors[keyof DeleteMessTableMessMessSlugTablesTableIdDeleteErrors];

export type DeleteMessTableMessMessSlugTablesTableIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMessTableMessMessSlugTablesTableIdGetData = {
    body?: never;
    path: {
        /**
         * Table Id
         */
        table_id: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/tables/{table_id}';
};

export type GetMessTableMessMessSlugTablesTableIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMessTableMessMessSlugTablesTableIdGetError = GetMessTableMessMessSlugTablesTableIdGetErrors[keyof GetMessTableMessMessSlugTablesTableIdGetErrors];

export type GetMessTableMessMessSlugTablesTableIdGetResponses = {
    /**
     * Successful Response
     */
    200: MessTableRead;
};

export type GetMessTableMessMessSlugTablesTableIdGetResponse = GetMessTableMessMessSlugTablesTableIdGetResponses[keyof GetMessTableMessMessSlugTablesTableIdGetResponses];

export type UpdateMessTableMessMessSlugTablesTableIdPutData = {
    body: MessTableUpdate;
    path: {
        /**
         * Table Id
         */
        table_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/tables/{table_id}';
};

export type UpdateMessTableMessMessSlugTablesTableIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMessTableMessMessSlugTablesTableIdPutError = UpdateMessTableMessMessSlugTablesTableIdPutErrors[keyof UpdateMessTableMessMessSlugTablesTableIdPutErrors];

export type UpdateMessTableMessMessSlugTablesTableIdPutResponses = {
    /**
     * Successful Response
     */
    200: MessTableRead;
};

export type UpdateMessTableMessMessSlugTablesTableIdPutResponse = UpdateMessTableMessMessSlugTablesTableIdPutResponses[keyof UpdateMessTableMessMessSlugTablesTableIdPutResponses];

export type DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
        /**
         * Table Id
         */
        table_id: string;
    };
    query?: never;
    url: '/mess/{mess_slug}/tables/{table_id}/download-qr';
};

export type DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetError = DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetErrors[keyof DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetErrors];

export type DownloadTableQrMessMessSlugTablesTableIdDownloadQrGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCategoriesMessSlugMenuCategoriesGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/categories';
};

export type GetCategoriesMessSlugMenuCategoriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoriesMessSlugMenuCategoriesGetError = GetCategoriesMessSlugMenuCategoriesGetErrors[keyof GetCategoriesMessSlugMenuCategoriesGetErrors];

export type GetCategoriesMessSlugMenuCategoriesGetResponses = {
    /**
     * Response Get Categories  Mess Slug  Menu Categories Get
     * Successful Response
     */
    200: Array<CategoryResponse>;
};

export type GetCategoriesMessSlugMenuCategoriesGetResponse = GetCategoriesMessSlugMenuCategoriesGetResponses[keyof GetCategoriesMessSlugMenuCategoriesGetResponses];

export type CreateCategoryMessSlugMenuCategoriesPostData = {
    body: MenuItemCategoryCreate;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/categories';
};

export type CreateCategoryMessSlugMenuCategoriesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCategoryMessSlugMenuCategoriesPostError = CreateCategoryMessSlugMenuCategoriesPostErrors[keyof CreateCategoryMessSlugMenuCategoriesPostErrors];

export type CreateCategoryMessSlugMenuCategoriesPostResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type CreateCategoryMessSlugMenuCategoriesPostResponse = CreateCategoryMessSlugMenuCategoriesPostResponses[keyof CreateCategoryMessSlugMenuCategoriesPostResponses];

export type GetMenuCategoriesMessSlugMenuMenuCategoriesGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/menu-categories';
};

export type GetMenuCategoriesMessSlugMenuMenuCategoriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuCategoriesMessSlugMenuMenuCategoriesGetError = GetMenuCategoriesMessSlugMenuMenuCategoriesGetErrors[keyof GetMenuCategoriesMessSlugMenuMenuCategoriesGetErrors];

export type GetMenuCategoriesMessSlugMenuMenuCategoriesGetResponses = {
    /**
     * Response Get Menu Categories  Mess Slug  Menu Menu Categories Get
     * Successful Response
     */
    200: Array<CategoryResponse>;
};

export type GetMenuCategoriesMessSlugMenuMenuCategoriesGetResponse = GetMenuCategoriesMessSlugMenuMenuCategoriesGetResponses[keyof GetMenuCategoriesMessSlugMenuMenuCategoriesGetResponses];

export type DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteData = {
    body?: never;
    path: {
        /**
         * Category Id
         */
        category_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/categories/{category_id}';
};

export type DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteError = DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteErrors[keyof DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteErrors];

export type DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponse = DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponses[keyof DeleteCategoryMessSlugMenuCategoriesCategoryIdDeleteResponses];

export type GetCategoryMessSlugMenuCategoriesCategoryIdGetData = {
    body?: never;
    path: {
        /**
         * Category Id
         */
        category_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/categories/{category_id}';
};

export type GetCategoryMessSlugMenuCategoriesCategoryIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryMessSlugMenuCategoriesCategoryIdGetError = GetCategoryMessSlugMenuCategoriesCategoryIdGetErrors[keyof GetCategoryMessSlugMenuCategoriesCategoryIdGetErrors];

export type GetCategoryMessSlugMenuCategoriesCategoryIdGetResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type GetCategoryMessSlugMenuCategoriesCategoryIdGetResponse = GetCategoryMessSlugMenuCategoriesCategoryIdGetResponses[keyof GetCategoryMessSlugMenuCategoriesCategoryIdGetResponses];

export type UpdateCategoryMessSlugMenuCategoriesCategoryIdPutData = {
    body: MenuItemCategoryUpdate;
    path: {
        /**
         * Category Id
         */
        category_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/categories/{category_id}';
};

export type UpdateCategoryMessSlugMenuCategoriesCategoryIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCategoryMessSlugMenuCategoriesCategoryIdPutError = UpdateCategoryMessSlugMenuCategoriesCategoryIdPutErrors[keyof UpdateCategoryMessSlugMenuCategoriesCategoryIdPutErrors];

export type UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCategoryResponse;
};

export type UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponse = UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponses[keyof UpdateCategoryMessSlugMenuCategoriesCategoryIdPutResponses];

export type GetMenuItemsMessSlugMenuItemsGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/items';
};

export type GetMenuItemsMessSlugMenuItemsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuItemsMessSlugMenuItemsGetError = GetMenuItemsMessSlugMenuItemsGetErrors[keyof GetMenuItemsMessSlugMenuItemsGetErrors];

export type GetMenuItemsMessSlugMenuItemsGetResponses = {
    /**
     * Response Get Menu Items  Mess Slug  Menu Items Get
     * Successful Response
     */
    200: Array<MenuItemDisplayResponse>;
};

export type GetMenuItemsMessSlugMenuItemsGetResponse = GetMenuItemsMessSlugMenuItemsGetResponses[keyof GetMenuItemsMessSlugMenuItemsGetResponses];

export type CreateMenuItemMessSlugMenuItemsPostData = {
    body: MenuItemCreate;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/items';
};

export type CreateMenuItemMessSlugMenuItemsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMenuItemMessSlugMenuItemsPostError = CreateMenuItemMessSlugMenuItemsPostErrors[keyof CreateMenuItemMessSlugMenuItemsPostErrors];

export type CreateMenuItemMessSlugMenuItemsPostResponses = {
    /**
     * Successful Response
     */
    200: MenuItemCreateResponse;
};

export type CreateMenuItemMessSlugMenuItemsPostResponse = CreateMenuItemMessSlugMenuItemsPostResponses[keyof CreateMenuItemMessSlugMenuItemsPostResponses];

export type GetMenuItemsDisplayMessSlugMenuItemsDisplayGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: {
        /**
         * Caloriemins
         */
        calorieMins?: number;
        /**
         * Caloriemaxes
         */
        calorieMaxes?: number;
        /**
         * Spicelevel
         */
        spiceLevel?: string;
        /**
         * Vegtype
         */
        vegType?: string;
        /**
         * Category
         */
        category?: string;
        /**
         * Q
         */
        q?: string;
    };
    url: '/{mess_slug}/menu/items/display';
};

export type GetMenuItemsDisplayMessSlugMenuItemsDisplayGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuItemsDisplayMessSlugMenuItemsDisplayGetError = GetMenuItemsDisplayMessSlugMenuItemsDisplayGetErrors[keyof GetMenuItemsDisplayMessSlugMenuItemsDisplayGetErrors];

export type GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponses = {
    /**
     * Successful Response
     */
    200: MenuResponse;
};

export type GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponse = GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponses[keyof GetMenuItemsDisplayMessSlugMenuItemsDisplayGetResponses];

export type DeleteMenuItemMessSlugMenuItemsItemIdDeleteData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/items/{item_id}';
};

export type DeleteMenuItemMessSlugMenuItemsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMenuItemMessSlugMenuItemsItemIdDeleteError = DeleteMenuItemMessSlugMenuItemsItemIdDeleteErrors[keyof DeleteMenuItemMessSlugMenuItemsItemIdDeleteErrors];

export type DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponse = DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponses[keyof DeleteMenuItemMessSlugMenuItemsItemIdDeleteResponses];

export type GetMenuItemMessSlugMenuItemsItemIdGetData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/items/{item_id}';
};

export type GetMenuItemMessSlugMenuItemsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMenuItemMessSlugMenuItemsItemIdGetError = GetMenuItemMessSlugMenuItemsItemIdGetErrors[keyof GetMenuItemMessSlugMenuItemsItemIdGetErrors];

export type GetMenuItemMessSlugMenuItemsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: MenuItemResponse;
};

export type GetMenuItemMessSlugMenuItemsItemIdGetResponse = GetMenuItemMessSlugMenuItemsItemIdGetResponses[keyof GetMenuItemMessSlugMenuItemsItemIdGetResponses];

export type UpdateMenuItemMessSlugMenuItemsItemIdPutData = {
    body: MenuItemUpdate;
    path: {
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/menu/items/{item_id}';
};

export type UpdateMenuItemMessSlugMenuItemsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMenuItemMessSlugMenuItemsItemIdPutError = UpdateMenuItemMessSlugMenuItemsItemIdPutErrors[keyof UpdateMenuItemMessSlugMenuItemsItemIdPutErrors];

export type UpdateMenuItemMessSlugMenuItemsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: MenuItemResponse;
};

export type UpdateMenuItemMessSlugMenuItemsItemIdPutResponse = UpdateMenuItemMessSlugMenuItemsItemIdPutResponses[keyof UpdateMenuItemMessSlugMenuItemsItemIdPutResponses];

export type GetOrdersMessSlugOrdersIncompleteGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/incomplete';
};

export type GetOrdersMessSlugOrdersIncompleteGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrdersMessSlugOrdersIncompleteGetError = GetOrdersMessSlugOrdersIncompleteGetErrors[keyof GetOrdersMessSlugOrdersIncompleteGetErrors];

export type GetOrdersMessSlugOrdersIncompleteGetResponses = {
    /**
     * Response Get Orders  Mess Slug  Orders Incomplete Get
     * Successful Response
     */
    200: Array<AdminOrderResponse>;
};

export type GetOrdersMessSlugOrdersIncompleteGetResponse = GetOrdersMessSlugOrdersIncompleteGetResponses[keyof GetOrdersMessSlugOrdersIncompleteGetResponses];

export type GetMyOrdersMessSlugOrdersMyOrdersGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/my-orders';
};

export type GetMyOrdersMessSlugOrdersMyOrdersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMyOrdersMessSlugOrdersMyOrdersGetError = GetMyOrdersMessSlugOrdersMyOrdersGetErrors[keyof GetMyOrdersMessSlugOrdersMyOrdersGetErrors];

export type GetMyOrdersMessSlugOrdersMyOrdersGetResponses = {
    /**
     * Response Get My Orders  Mess Slug  Orders My Orders Get
     * Successful Response
     */
    200: MyOrderResponse | null;
};

export type GetMyOrdersMessSlugOrdersMyOrdersGetResponse = GetMyOrdersMessSlugOrdersMyOrdersGetResponses[keyof GetMyOrdersMessSlugOrdersMyOrdersGetResponses];

export type GetOrderMessSlugOrdersOrderIdAdminItemsGetData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/admin-items';
};

export type GetOrderMessSlugOrdersOrderIdAdminItemsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderMessSlugOrdersOrderIdAdminItemsGetError = GetOrderMessSlugOrdersOrderIdAdminItemsGetErrors[keyof GetOrderMessSlugOrdersOrderIdAdminItemsGetErrors];

export type GetOrderMessSlugOrdersOrderIdAdminItemsGetResponses = {
    /**
     * Successful Response
     */
    200: AdminOrderItemResponse;
};

export type GetOrderMessSlugOrdersOrderIdAdminItemsGetResponse = GetOrderMessSlugOrdersOrderIdAdminItemsGetResponses[keyof GetOrderMessSlugOrdersOrderIdAdminItemsGetResponses];

export type CreateOrderMessSlugOrdersPostData = {
    body: OrderCreate;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/';
};

export type CreateOrderMessSlugOrdersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOrderMessSlugOrdersPostError = CreateOrderMessSlugOrdersPostErrors[keyof CreateOrderMessSlugOrdersPostErrors];

export type CreateOrderMessSlugOrdersPostResponses = {
    /**
     * Successful Response
     */
    200: OrderCreateResponse;
};

export type CreateOrderMessSlugOrdersPostResponse = CreateOrderMessSlugOrdersPostResponses[keyof CreateOrderMessSlugOrdersPostResponses];

export type GetOrderPopupMessSlugOrdersPopupGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: {
        /**
         * Table Id
         */
        table_id?: string | null;
    };
    url: '/{mess_slug}/orders/popup';
};

export type GetOrderPopupMessSlugOrdersPopupGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderPopupMessSlugOrdersPopupGetError = GetOrderPopupMessSlugOrdersPopupGetErrors[keyof GetOrderPopupMessSlugOrdersPopupGetErrors];

export type GetOrderPopupMessSlugOrdersPopupGetResponses = {
    /**
     * Response Get Order Popup  Mess Slug  Orders Popup Get
     * Successful Response
     */
    200: OrderPopupResponse | null;
};

export type GetOrderPopupMessSlugOrdersPopupGetResponse = GetOrderPopupMessSlugOrdersPopupGetResponses[keyof GetOrderPopupMessSlugOrdersPopupGetResponses];

export type GetOrderItemsMessSlugOrdersOrderIdItemsGetData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/items';
};

export type GetOrderItemsMessSlugOrdersOrderIdItemsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderItemsMessSlugOrdersOrderIdItemsGetError = GetOrderItemsMessSlugOrdersOrderIdItemsGetErrors[keyof GetOrderItemsMessSlugOrdersOrderIdItemsGetErrors];

export type GetOrderItemsMessSlugOrdersOrderIdItemsGetResponses = {
    /**
     * Successful Response
     */
    200: CustomerOrderItemResponse;
};

export type GetOrderItemsMessSlugOrdersOrderIdItemsGetResponse = GetOrderItemsMessSlugOrdersOrderIdItemsGetResponses[keyof GetOrderItemsMessSlugOrdersOrderIdItemsGetResponses];

export type AddOrderItemMessSlugOrdersOrderIdItemsPostData = {
    /**
     * Items
     */
    body: Array<OrderItemCreate>;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/items';
};

export type AddOrderItemMessSlugOrdersOrderIdItemsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddOrderItemMessSlugOrdersOrderIdItemsPostError = AddOrderItemMessSlugOrdersOrderIdItemsPostErrors[keyof AddOrderItemMessSlugOrdersOrderIdItemsPostErrors];

export type AddOrderItemMessSlugOrdersOrderIdItemsPostResponses = {
    /**
     * Response Add Order Item  Mess Slug  Orders  Order Id  Items Post
     * Successful Response
     */
    200: Array<OrderItemCreate>;
};

export type AddOrderItemMessSlugOrdersOrderIdItemsPostResponse = AddOrderItemMessSlugOrdersOrderIdItemsPostResponses[keyof AddOrderItemMessSlugOrdersOrderIdItemsPostResponses];

export type DeleteOrderMessSlugOrdersOrderIdDeleteData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}';
};

export type DeleteOrderMessSlugOrdersOrderIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOrderMessSlugOrdersOrderIdDeleteError = DeleteOrderMessSlugOrdersOrderIdDeleteErrors[keyof DeleteOrderMessSlugOrdersOrderIdDeleteErrors];

export type DeleteOrderMessSlugOrdersOrderIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteOrderMessSlugOrdersOrderIdDeleteResponse = DeleteOrderMessSlugOrdersOrderIdDeleteResponses[keyof DeleteOrderMessSlugOrdersOrderIdDeleteResponses];

export type UpdateOrderMessSlugOrdersOrderIdPutData = {
    body: OrderUpdate;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}';
};

export type UpdateOrderMessSlugOrdersOrderIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderMessSlugOrdersOrderIdPutError = UpdateOrderMessSlugOrdersOrderIdPutErrors[keyof UpdateOrderMessSlugOrdersOrderIdPutErrors];

export type UpdateOrderMessSlugOrdersOrderIdPutResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type UpdateOrderMessSlugOrdersOrderIdPutResponse = UpdateOrderMessSlugOrdersOrderIdPutResponses[keyof UpdateOrderMessSlugOrdersOrderIdPutResponses];

export type UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query: {
        status: OrderStatusEnum;
    };
    url: '/{mess_slug}/orders/{order_id}/status';
};

export type UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchError = UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchErrors[keyof UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchErrors];

export type UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponse = UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponses[keyof UpdateOrderStatusMessSlugOrdersOrderIdStatusPatchResponses];

export type UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/customer-cancel';
};

export type UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchError = UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchErrors[keyof UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchErrors];

export type UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponse = UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponses[keyof UpdateOrderStatusMessSlugOrdersOrderIdCustomerCancelPatchResponses];

export type CompleteOrderMessSlugOrdersOrderIdCompletePostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/complete';
};

export type CompleteOrderMessSlugOrdersOrderIdCompletePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CompleteOrderMessSlugOrdersOrderIdCompletePostError = CompleteOrderMessSlugOrdersOrderIdCompletePostErrors[keyof CompleteOrderMessSlugOrdersOrderIdCompletePostErrors];

export type CompleteOrderMessSlugOrdersOrderIdCompletePostResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type CompleteOrderMessSlugOrdersOrderIdCompletePostResponse = CompleteOrderMessSlugOrdersOrderIdCompletePostResponses[keyof CompleteOrderMessSlugOrdersOrderIdCompletePostResponses];

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/items/{item_id}/customer-cancel';
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchError = CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchErrors[keyof CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchErrors];

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponse = CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponses[keyof CancelOrderItemMessSlugOrdersOrderIdItemsItemIdCustomerCancelPatchResponses];

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/items/{item_id}/admin-cancel';
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchError = CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchErrors[keyof CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchErrors];

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponses = {
    /**
     * Successful Response
     */
    200: OrderUpdate;
};

export type CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponse = CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponses[keyof CancelOrderItemMessSlugOrdersOrderIdItemsItemIdAdminCancelPatchResponses];

export type DeleteOrderItemMessSlugOrdersItemsItemIdDeleteData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/items/{item_id}';
};

export type DeleteOrderItemMessSlugOrdersItemsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOrderItemMessSlugOrdersItemsItemIdDeleteError = DeleteOrderItemMessSlugOrdersItemsItemIdDeleteErrors[keyof DeleteOrderItemMessSlugOrdersItemsItemIdDeleteErrors];

export type DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponse = DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponses[keyof DeleteOrderItemMessSlugOrdersItemsItemIdDeleteResponses];

export type UpdateOrderItemMessSlugOrdersItemsItemIdPutData = {
    body: OrderItemUpdate;
    path: {
        /**
         * Item Id
         */
        item_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/items/{item_id}';
};

export type UpdateOrderItemMessSlugOrdersItemsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOrderItemMessSlugOrdersItemsItemIdPutError = UpdateOrderItemMessSlugOrdersItemsItemIdPutErrors[keyof UpdateOrderItemMessSlugOrdersItemsItemIdPutErrors];

export type UpdateOrderItemMessSlugOrdersItemsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: OrderItemResponse;
};

export type UpdateOrderItemMessSlugOrdersItemsItemIdPutResponse = UpdateOrderItemMessSlugOrdersItemsItemIdPutResponses[keyof UpdateOrderItemMessSlugOrdersItemsItemIdPutResponses];

export type GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetData = {
    body?: never;
    path: {
        /**
         * Transaction Id
         */
        transaction_id: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/transactions/{transaction_id}';
};

export type GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetError = GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetErrors[keyof GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetErrors];

export type GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponses = {
    /**
     * Successful Response
     */
    200: OrderTransactionResponse;
};

export type GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponse = GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponses[keyof GetOrderTransactionMessSlugOrdersTransactionsTransactionIdGetResponses];

export type CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/orders/{order_id}/checkout/initiate/khalti';
};

export type CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostError = CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostErrors[keyof CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostErrors];

export type CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostResponses = {
    /**
     * Successful Response
     */
    200: OrderTransactionResponse;
};

export type CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostResponse = CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostResponses[keyof CheckoutKhaltiMessSlugOrdersOrderIdCheckoutInitiateKhaltiPostResponses];

export type CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetData = {
    body?: never;
    path: {
        /**
         * Order Id
         */
        order_id: string;
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query: {
        /**
         * Is Success
         */
        is_success: boolean;
        /**
         * Transaction Id
         */
        transaction_id?: string | null;
    };
    url: '/{mess_slug}/orders/{order_id}/checkout/callback/khalti';
};

export type CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetError = CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetErrors[keyof CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetErrors];

export type CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetResponses = {
    /**
     * Response Checkout Callback Khalti  Mess Slug  Orders  Order Id  Checkout Callback Khalti Get
     * Successful Response
     */
    200: OrderTransactionResponse | null;
};

export type CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetResponse = CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetResponses[keyof CheckoutCallbackKhaltiMessSlugOrdersOrderIdCheckoutCallbackKhaltiGetResponses];

export type GetAnalyticsMessSlugGetData = {
    body?: never;
    path: {
        /**
         * Mess Slug
         */
        mess_slug: string;
    };
    query?: never;
    url: '/{mess_slug}/';
};

export type GetAnalyticsMessSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAnalyticsMessSlugGetError = GetAnalyticsMessSlugGetErrors[keyof GetAnalyticsMessSlugGetErrors];

export type GetAnalyticsMessSlugGetResponses = {
    /**
     * Successful Response
     */
    200: AnalyticsResponse;
};

export type GetAnalyticsMessSlugGetResponse = GetAnalyticsMessSlugGetResponses[keyof GetAnalyticsMessSlugGetResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: ResponseMessage;
};

export type ReadRootGetResponse = ReadRootGetResponses[keyof ReadRootGetResponses];

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadItemItemsItemIdGetData = {
    body?: never;
    path: {
        /**
         * Item Id
         */
        item_id: number;
    };
    query?: {
        /**
         * Q
         */
        q?: string | null;
    };
    url: '/items/{item_id}';
};

export type ReadItemItemsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadItemItemsItemIdGetError = ReadItemItemsItemIdGetErrors[keyof ReadItemItemsItemIdGetErrors];

export type ReadItemItemsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8000' | (string & {});
};